[
  {
    "objectID": "sex_DEG_plot.html",
    "href": "sex_DEG_plot.html",
    "title": "plot for the DEG number in each cell type",
    "section": "",
    "text": "library(Seurat)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(patchwork)\nlibrary(stringr)\nlibrary(ggplot2)\n## https://drive.google.com/file/d/16Jq6w_KAWwI2rBN7SYBw-7bm5qwVoFyt/view?usp=drive_link\nseu_obj &lt;- readRDS(file=\"/project/zhuzhuzhang/lyang/scaleBio_RNA_rat_brain/out_mRatBN/merged_seurat_obj_celltype_annotated_2.rds\")\n## https://drive.google.com/file/d/1sWhyhm5V5RlxMEJhZ1BUncDxaI2_tGXJ/view?usp=drive_link\npseudo_de_sex &lt;- readRDS(file = \"./pseudo_sex_DESeq2_DEG_2.rds\")\noptions(repr.plot.width = 8, repr.plot.height = 4, repr.plot.res = 300)\np1 &lt;- seu_obj@meta.data %&gt;%\n    #count(celltype) %&gt;%\n    mutate(group=factor(group,levels=c(\"soc\",\"iso\"))) %&gt;%\n    filter(celltype!=\"NA\") %&gt;%\n    ggplot(aes(x=celltype))+\n    geom_bar(fill=\"darkgrey\")+\n    geom_text(stat='count', aes(label=..count..), vjust=-0.2,size=2)+\n    #geom_text(aes(label = n), vjust = 0.5,size=2)+\n    facet_grid(sex~group)+\n    labs(x=\"\",y=\"# of cells\")+\n    theme_minimal()+\n    theme(axis.text.x=element_blank(),\n        #axis.text.x=element_text(angle=90,hjust=1),\n         plot.margin = unit(c(0,0,0,0), \"cm\"))\noptions(repr.plot.width = 8, repr.plot.height = 2, repr.plot.res = 300)\np2 &lt;- sapply(pseudo_de_sex,nrow) %&gt;%\nas.data.frame() %&gt;%\nsetNames(\"gene_num\") %&gt;%\nmutate(name=row.names(.)) %&gt;%\nmutate(celltype=str_split(name,\"_\",simplify = T)[,1],\n      group=str_split(name,\"_\",simplify = T)[,2]) %&gt;%\nmutate(celltype=factor(celltype,levels=levels(seu_obj@meta.data$celltype)[1:15])) %&gt;%\nmutate(group=factor(group,levels=c(\"soc\",\"iso\"))) %&gt;%\nggplot(aes(x=celltype,y=gene_num))+\n    geom_bar(stat = \"identity\",fill=\"darkgrey\")+\n    geom_text(aes(label = gene_num),\n              position = position_stack(vjust = 1.02),size=2)+\n    facet_grid(.~group)+\n    theme_minimal()+\n    theme(axis.text.x = element_text(size=8,angle=30,hjust=1,vjust=1))+\n    labs(y=\"gene number\")\noptions(repr.plot.width = 8, repr.plot.height = 5, repr.plot.res = 300)\np1/p2 + plot_layout(heights = c(2, 1))"
  },
  {
    "objectID": "sex_DEG_plot.html#violin-plots-for-genes",
    "href": "sex_DEG_plot.html#violin-plots-for-genes",
    "title": "plot for the DEG number in each cell type",
    "section": "violin plots for genes",
    "text": "violin plots for genes\n\nmake_vlnplot &lt;- \nfunction(seuObject,genes=NULL,celltype=NULL,label_df=NULL){\n    VlnPlot(seuObject, \n        features = genes,\n        idents=celltype,\n        split.by = \"sex\",\n        pt.size = 0.0,\n        #split.plot = T,\n        log=FALSE  )&\n        scale_fill_manual(values=c(\"M\"=\"#8ecae6\",\"F\"=\"#ffe5ec\")) &\n        annotate(\"text\",x=label_df$celltype,y=Inf,label=label_df$P_label,vjust=1,hjust=0.5) &\n        #stat_summary(fun = median, fun.min = median, fun.max = median,\n        #         geom = \"crossbar\", \n        #         width = 0.6,\n        #         position = position_dodge(width = .70)) &\n                xlab(\"\") &\n                ylab(\"Gene Expression\") &\n          stat_summary(fun = \"mean\",\n               geom = \"point\",\n               color = \"black\",\n               position = position_dodge(width = .90)) &\n    labs(caption = paste(\"adj.p: \",\"**** &lt;0.0001\",\"*** &lt;0.001\",\"** &lt;0.01\",\"* &lt;0.05\")) &\n    guides(fill = guide_legend(override.aes = list(linetype = 0,size = 0)),\n               color = guide_legend(override.aes = list(linetype = 0,size=0)))\n}\n\n\nIdents(seu_obj) &lt;- \"celltype\"\nseu_obj@meta.data$group &lt;- factor(seu_obj@meta.data$group,levels=c(\"soc\",\"iso\"))\nseu_obj@meta.data$sex &lt;- factor(seu_obj@meta.data$sex,levels=c(\"F\",\"M\"))\n\n\nFvsM_DEG_ls &lt;- read.table(\"FvsM_DEG_total_list.xls\",sep=\"\\t\",stringsAsFactors = F,header=T)\nFvsM_DEG_ls$P_label&lt;- \n    symnum(FvsM_DEG_ls$p_val_adj, cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05,1),\n       symbols = c(\"****\", \"***\", \"**\", \"*\", \"ns\"),\n       abbr.colnames = FALSE, na = \"\")\nFvsM_DEG_ls$celltype &lt;- str_split(FvsM_DEG_ls$new_clumn,\"_\",simplify=T)[,1]\nFvsM_DEG_ls$group &lt;- str_split(FvsM_DEG_ls$new_clumn,\"_\",simplify=T)[,2]\n\n\ntable(FvsM_DEG_ls$group)\n\n\niso soc \n 82 211 \n\n\n\nsoc_gene_for_plot &lt;- \nFvsM_DEG_ls %&gt;%\n    select(gene,new_clumn) %&gt;%\n    mutate(celltype=str_split(new_clumn,\"_\",simplify=T)[,1],\n          group=str_split(new_clumn,\"_\",simplify=T)[,2]) %&gt;%\n    filter(group==\"soc\")%&gt;%\n    group_by(gene) %&gt;%\n    summarise(celltype = str_c(celltype, collapse=\",\"))\n\niso_gene_for_plot &lt;- \nFvsM_DEG_ls %&gt;%\n    select(gene,new_clumn) %&gt;%\n    mutate(celltype=str_split(new_clumn,\"_\",simplify=T)[,1],\n          group=str_split(new_clumn,\"_\",simplify=T)[,2]) %&gt;%\n    filter(group==\"iso\")%&gt;%\n    group_by(gene) %&gt;%\n    summarise(celltype = str_c(celltype, collapse=\",\"))\n\n\ngene_ls &lt;- c(\"Ndst4\",\"Cdh12\",\"Gpc5\",\"Gpc6\",\"Lingo2\",\"Nrxn3\",\"Ralyl\")\n\n\nlibrary(ggpubr)\n\n\ntexto &lt;- textGrob(\n  label = c(\"adj.p\",\"**** &lt;0.0001\",\"*** &lt;0.001\",\"** &lt;0.01\",\"* &lt;0.05\"),\n  x = c(0,0,0,0,0),\n  y = c(0,0.2,0.4,0.6,0.8),\n  gp = gpar(lwd = 2, fontsize = 5),\n  )\n\n\niso_FvsM_DEGs &lt;- unique(iso_gene_for_plot$gene)\npdf(file = \"./Vlnplot_for_iso_FvsM_DEGs.pdf\",width=8,height=4,onefile=TRUE)\nseuObject &lt;- subset(seu_obj,subset=group==\"iso\")\nseuObject@meta.data$sex &lt;- factor(seuObject@meta.data$sex,levels=c(\"M\",\"F\"))\nfor(i in seq_len(length(iso_FvsM_DEGs))){\n    print(paste0(\"prcocessing gene: \",iso_FvsM_DEGs[i]))\n    label_df &lt;- \n        FvsM_DEG_ls %&gt;%\n        filter(gene==iso_FvsM_DEGs[i] & group==\"iso\")\n    print(nrow(label_df))\n    if(nrow(label_df)&gt;0){\n        p &lt;- make_vlnplot(seuObject,\n                      genes=iso_FvsM_DEGs[i],\n                      celltype=levels(seu_obj@meta.data$celltype)[1:14],\n                      label_df=label_df\n                 )\n        print(p)\n    }\n    \n}\ndev.off()"
  },
  {
    "objectID": "sex_DEG_plot.html#save-the-data-matrix-for-all-degs-between-f-and-m",
    "href": "sex_DEG_plot.html#save-the-data-matrix-for-all-degs-between-f-and-m",
    "title": "plot for the DEG number in each cell type",
    "section": "save the data matrix for all DEGs between F and M",
    "text": "save the data matrix for all DEGs between F and M\n\niso_compare &lt;- pseudo_de_sex[names(pseudo_de_sex)[grep(\"iso\",names(pseudo_de_sex))]]\nsoc_compare &lt;- pseudo_de_sex[names(pseudo_de_sex)[grep(\"soc\",names(pseudo_de_sex))]]\n\n\nget the DEG list for iso group comparison\n\nDEG_ls&lt;-\nlapply(seq_len(length(names(iso_compare))), function(x) {\n    if (sum(iso_compare[[x]]$p_val_adj &lt; 0.05 & abs(iso_compare[[x]]$avg_log2FC) &gt; 0.3,na.rm = TRUE) &gt; 0) {\n        iso_compare[[x]] %&gt;%\n            filter(p_val_adj &lt; 0.05, abs(avg_log2FC) &gt; 0.3)\n    }\n})\nnames(DEG_ls) &lt;- str_split(names(iso_compare),\"_\",simplify = T)[,1]\nDEG_ls &lt;- DEG_ls[!sapply(DEG_ls,is.null)]\n\n## load gene coordinates information\ngene_coord &lt;- read.table(\"/project/zhuzhuzhang/lyang/references/mRatBN7.2_NCBI/gene_coordinates\",header=F,stringsAsFactors = F) %&gt;%\nsetNames(c(\"chr\",\"start\",\"end\",\"strand\",\"gene\"))\n\ndo.call(rbind,Map(cbind, DEG_ls, new_clumn = names(DEG_ls))) %&gt;%\n  mutate(gene = str_split(row.names(.), \"\\\\.\", simplify = TRUE)[, 2]) %&gt;%\n    filter(gene != \"\") %&gt;%\n    left_join(gene_coord,by=c(\"gene\"=\"gene\")) %&gt;%\n    write.table(\"iso_FvsM_DEG_total_list.txt\",sep=\"\\t\",quote=F,row.names=F)\n\n\n\nget the DEG list for soc group comparison\n\nDEG_ls&lt;-\nlapply(seq_len(length(names(soc_compare))), function(x) {\n    if (sum(soc_compare[[x]]$p_val_adj &lt; 0.05 & abs(soc_compare[[x]]$avg_log2FC) &gt; 0.3,na.rm = TRUE) &gt; 0) {\n        soc_compare[[x]] %&gt;%\n            filter(p_val_adj &lt; 0.05, abs(avg_log2FC) &gt; 0.3)\n    }\n})\nnames(DEG_ls) &lt;- str_split(names(soc_compare),\"_\",simplify = T)[,1]\nDEG_ls &lt;- DEG_ls[!sapply(DEG_ls,is.null)]\n\ndo.call(rbind,Map(cbind, DEG_ls, new_clumn = names(DEG_ls))) %&gt;%\n  mutate(gene = str_split(row.names(.), \"\\\\.\", simplify = TRUE)[, 2]) %&gt;%\n    filter(gene != \"\") %&gt;%\n    left_join(gene_coord,by=c(\"gene\"=\"gene\")) %&gt;%\n    write.table(\"soc_FvsM_DEG_total_list.txt\",sep=\"\\t\",quote=F,row.names=F)\n\n\nsoc_FvsM_DEG &lt;- read.table(\"soc_FvsM_DEG_total_list.txt\",sep=\"\\t\",header=T)\n\n\niso_FvsM_DEG &lt;- read.table(\"iso_FvsM_DEG_total_list.txt\",sep=\"\\t\",header=T)"
  },
  {
    "objectID": "sex_DEG_plot.html#save-the-fc-data-for-all-celltypes-for-all-degs",
    "href": "sex_DEG_plot.html#save-the-fc-data-for-all-celltypes-for-all-degs",
    "title": "plot for the DEG number in each cell type",
    "section": "save the FC data for all celltypes for all DEGs",
    "text": "save the FC data for all celltypes for all DEGs\n\nto make the asterisk labeled heatmap for F_vs_M DEGs\n\n## gather fold change information together\nDEG_ls&lt;- \nlapply(seq_len(length(names(iso_compare))), function(x) {\n        iso_compare[[x]] %&gt;%\n            filter(row.names(.) %in% unique(iso_FvsM_DEG$gene))\n    })\nnames(DEG_ls) &lt;- str_split(names(iso_compare),\"_\",simplify = T)[,1]\nall_DEG_gene &lt;- do.call(rbind,Map(cbind, DEG_ls, new_clumn = names(DEG_ls))) %&gt;%\n  mutate(gene = str_split(row.names(.), \"\\\\.\", simplify = TRUE)[, 2]) %&gt;%\n    filter(gene != \"\")\n\nall_DEG_gene %&gt;%\n    select(new_clumn,avg_log2FC,gene) %&gt;%\n    tidyr::pivot_wider(names_from = new_clumn, values_from = avg_log2FC) %&gt;%\n    tibble::column_to_rownames(var=\"gene\") %&gt;%\n    write.table(file=\"./iso_FvsM_DEG_FC_celltype_matrix.tsv\",quote=F,sep=\"\\t\",row.names=T)\n\nall_DEG_gene %&gt;%\n    select(new_clumn,p_val_adj,gene) %&gt;%\n    tidyr::pivot_wider(names_from = new_clumn, values_from = p_val_adj) %&gt;%\n    tibble::column_to_rownames(var=\"gene\") %&gt;%\n    write.table(file=\"./iso_FvsM_DEG_adjP_celltype_matrix.tsv\",quote=F,sep=\"\\t\",row.names=T)\n\nsame for social grouped comparison\n\n## gather fold change information together\nDEG_ls&lt;- \nlapply(seq_len(length(names(soc_compare))), function(x) {\n        soc_compare[[x]] %&gt;%\n            filter(row.names(.) %in% unique(soc_FvsM_DEG$gene))\n    })\nnames(DEG_ls) &lt;- str_split(names(soc_compare),\"_\",simplify = T)[,1]\nall_DEG_gene &lt;- do.call(rbind,Map(cbind, DEG_ls, new_clumn = names(DEG_ls))) %&gt;%\n  mutate(gene = str_split(row.names(.), \"\\\\.\", simplify = TRUE)[, 2]) %&gt;%\n    filter(gene != \"\")\n\nall_DEG_gene %&gt;%\n    select(new_clumn,avg_log2FC,gene) %&gt;%\n    tidyr::pivot_wider(names_from = new_clumn, values_from = avg_log2FC) %&gt;%\n    tibble::column_to_rownames(var=\"gene\") %&gt;%\n    write.table(file=\"./soc_FvsM_DEG_FC_celltype_matrix.tsv\",quote=F,sep=\"\\t\",row.names=T)\n\nall_DEG_gene %&gt;%\n    select(new_clumn,p_val_adj,gene) %&gt;%\n    tidyr::pivot_wider(names_from = new_clumn, values_from = p_val_adj) %&gt;%\n    tibble::column_to_rownames(var=\"gene\") %&gt;%\n    write.table(file=\"./soc_FvsM_DEG_adjP_celltype_matrix.tsv\",quote=F,sep=\"\\t\",row.names=T)"
  },
  {
    "objectID": "sex_DEG_plot.html#make-umaps-for-fvsm-degs",
    "href": "sex_DEG_plot.html#make-umaps-for-fvsm-degs",
    "title": "plot for the DEG number in each cell type",
    "section": "make umaps for FvsM DEGs",
    "text": "make umaps for FvsM DEGs\n\niso_FvsM_DEG &lt;- \n    FvsM_DEG_ls %&gt;%\n    filter(group==\"iso\") %&gt;%\n    pull(gene) %&gt;%\n    unique()\npdf(file = \"./iso_FvsM_DEG_umap.pdf\",width=10,height=5,onefile=TRUE)\nfor(i in seq_len(length(iso_FvsM_DEG))){\n    p &lt;- FeaturePlot(seu_obj, features = iso_FvsM_DEG[i],split.by=\"sex\") + \n            theme(legend.position = c(-0.35,0.2))+\n            theme(legend.text=element_text(size=10, color=\"black\"))\n    print(p)\n}\ndev.off()\n\npng: 2\n\n\n\nsoc_FvsM_DEG &lt;- \n    FvsM_DEG_ls %&gt;%\n    filter(group==\"soc\") %&gt;%\n    pull(gene) %&gt;%\n    unique()\n\nsoc_FvsM_DEG &lt;- \n    FvsM_DEG_ls %&gt;%\n    filter(group==\"soc\") %&gt;%\n    pull(gene) %&gt;%\n    unique()\npdf(file = \"./soc_FvsM_DEG_umap.pdf\",width=10,height=5,onefile=TRUE)\nfor(i in seq_len(length(soc_FvsM_DEG))){\n    p &lt;- FeaturePlot(seu_obj, features = soc_FvsM_DEG[i],split.by=\"sex\") + \n            theme(legend.position = c(-0.35,0.2))+\n            theme(legend.text=element_text(size=10, color=\"black\"))\n    print(p)\n}\ndev.off()\n\npng: 2\n\n\n\nmake heatmap on the foldchanges of all DEGs between F vs. M in iso group\n\niso_FvsM_DEG_FC &lt;- read.table(\"./iso_FvsM_DEG_FC_celltype_matrix.tsv\", header=T,sep=\"\\t\",row.names=1)\niso_FvsM_DEG_P &lt;- read.table(\"./iso_FvsM_DEG_adjP_celltype_matrix.tsv\", header=T,sep=\"\\t\",row.names=1)\n\nset cutoffs for asterisk label of significance\n\nrm.neg&lt;-plyr::colwise(function(x){\n  return(ifelse(x &lt; 0.0001,\"****\", \n                ifelse(x&lt;0.001,\"***\",\n                      ifelse(x&lt;0.01,\"**\",\n                            ifelse(x&lt;0.05,\"*\",\"\")))))})\np_sign_df &lt;- rm.neg(iso_FvsM_DEG_P)\n\n\n## make sure the column names are consistent in the p-value and foldchange table\nrow.names(p_sign_df) &lt;- row.names(iso_FvsM_DEG_P)\ncolnames(p_sign_df) &lt;- c(\"L2/3 IT\", \"L4 IT\", \"L5 IT\", \"L6 IT\", \"L5/6 NP\", \"L6 CT\", \"L5 ET\", \"CGE-Inh\", \"Sst-Inh\", \"Pvalb-Inh\", \"ASC\", \"ODC\", \"OPC\", \"Endo\")\n\ncolnames(iso_FvsM_DEG_FC) &lt;- c(\"L2/3 IT\", \"L4 IT\", \"L5 IT\", \"L6 IT\", \"L5/6 NP\", \"L6 CT\", \"L5 ET\", \"CGE-Inh\", \"Sst-Inh\", \"Pvalb-Inh\", \"ASC\", \"ODC\", \"OPC\", \"Endo\")\n\np_sign_df[is.na(p_sign_df)] &lt;- \"\"\np_sign_df[abs(iso_FvsM_DEG_FC)&lt;0.3] &lt;- \"\"\n\n\nlibrary(circlize)\nlibrary(ComplexHeatmap)\n\n\ncol_fun = colorRamp2(c(-5, 0, 5), c(\"#0077b6\", \"white\", \"#e63946\"))\np = Heatmap(iso_FvsM_DEG_FC, name = \"iso F/M\\navg_logFC\", col = col_fun,\n        cluster_columns = F,\n        show_row_dend = F,\n        heatmap_legend_param = list(\n            legend_direction = \"horizontal\", \n        legend_width = unit(6, \"cm\")),\n        cell_fun = function(j, i, x, y, width, height, fill) {\n            grid.text(sprintf(\"%s\", p_sign_df[i, j]), x, y, gp = gpar(fontsize = 10))\n})\n\nlgd1 = Legend(labels=c(\"&lt;0.0001\",\"&lt;0.001\",\"&lt;0.01\",\"&lt;0.05\"),pch = c(\"**** \",\"*** \",\"** \",\"* \"), title = \"adj.p\", type = \"points\", \n    background = \"white\",direction = \"horizontal\")\nlgd2 = Legend(labels=\"gene not detected\",legend_gp = gpar(fill = \"grey\"), title = \"NA\")\n\npdf(\"iso_FvsM_DEG_logFC_heatmap_2.pdf\",width=7,height=8)\ndraw(p,annotation_legend_list = list(lgd1,lgd2),heatmap_legend_side=\"bottom\", annotation_legend_side=\"right\",\n           legend_grouping = \"original\")\ndev.off()\n\nWarning message:\n“The input is a data frame-like object, convert it to a matrix.”\n\n\npng: 2\n\n\n\nSame plot for soc group\n\nsoc_FvsM_DEG_FC &lt;- read.table(\"./soc_FvsM_DEG_FC_celltype_matrix.tsv\", header=T,sep=\"\\t\",row.names=1)\nsoc_FvsM_DEG_P &lt;- read.table(\"./soc_FvsM_DEG_adjP_celltype_matrix.tsv\", header=T,sep=\"\\t\",row.names=1)\n\np_sign_df &lt;- rm.neg(soc_FvsM_DEG_P)\nrow.names(p_sign_df) &lt;- row.names(soc_FvsM_DEG_P)\ncolnames(p_sign_df) &lt;- c(\"L2/3 IT\", \"L4 IT\", \"L5 IT\", \"L6 IT\", \"L5/6 NP\", \"L6 CT\", \"L5 ET\", \"CGE-Inh\", \"Sst-Inh\", \"Pvalb-Inh\", \"ASC\", \"ODC\", \"OPC\", \"Endo\")\n\ncolnames(soc_FvsM_DEG_FC) &lt;- c(\"L2/3 IT\", \"L4 IT\", \"L5 IT\", \"L6 IT\", \"L5/6 NP\", \"L6 CT\", \"L5 ET\", \"CGE-Inh\", \"Sst-Inh\", \"Pvalb-Inh\", \"ASC\", \"ODC\", \"OPC\", \"Endo\")\np_sign_df[is.na(p_sign_df)] &lt;- \"\"\np_sign_df[abs(soc_FvsM_DEG_FC)&lt;0.3] &lt;- \"\"\n\n\ncol_fun = colorRamp2(c(-5, 0, 5), c(\"#0077b6\", \"white\", \"#e63946\"))\np = Heatmap(soc_FvsM_DEG_FC, name = \"soc F/M\\navg_logFC\", col = col_fun,\n        cluster_columns = F,\n        show_row_dend = F,\n        heatmap_legend_param = list(\n            legend_direction = \"horizontal\", \n        legend_width = unit(6, \"cm\")),\n        row_names_gp = grid::gpar(fontsize = 4),\n        cell_fun = function(j, i, x, y, width, height, fill) {\n            gb = textGrob(\"*\")\n            gb_w = convertWidth(grobWidth(gb), \"mm\")\n            gb_h = convertHeight(grobHeight(gb), \"mm\")\n            grid.text(sprintf(\"%s\", p_sign_df[i, j]), x, y - gb_h*0.5 + gb_w*0.4, gp = gpar(fontsize = 10))\n})\n\nlgd1 = Legend(labels=c(\"&lt;0.0001\",\"&lt;0.001\",\"&lt;0.01\",\"&lt;0.05\"),pch = c(\"**** \",\"*** \",\"** \",\"* \"), title = \"adj.p\", type = \"points\", \n    background = \"white\",direction = \"horizontal\")\nlgd2 = Legend(labels=\"gene not detected\",legend_gp = gpar(fill = \"grey\"), title = \"NA\")\n\npdf(\"soc_FvsM_DEG_logFC_heatmap.pdf\",width=6,height=12)\ndraw(p,annotation_legend_list = list(lgd1,lgd2),heatmap_legend_side=\"bottom\", annotation_legend_side=\"right\",\n           legend_grouping = \"original\")\ndev.off()\n\nWarning message:\n“The input is a data frame-like object, convert it to a matrix.”\nWarning message:\n“You defined `cell_fun` for a heatmap with more than 100 rows or\ncolumns, which might be very slow to draw. Consider to use the\nvectorized version `layer_fun`.”\n\n\npng: 2"
  },
  {
    "objectID": "cluster_annotation.html",
    "href": "cluster_annotation.html",
    "title": "Finding DEFs",
    "section": "",
    "text": "library(Seurat)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(patchwork)\nlibrary(stringr)\nlibrary(ggplot2)\n## https://drive.google.com/file/d/1lzCmtd7nihnCfX7vRLWNeb1a0Etgo8ol/view?usp=drive_link\nseu_obj &lt;- readRDS(file=\"/project/zhuzhuzhang/lyang/scaleBio_RNA_rat_brain/out_mRatBN/merged_seurat_obj_DF_removed_2.rds\")\nlibrary(RColorBrewer)\nsel.gene &lt;- c( 'Slc17a7', 'Lingo1', 'Sv2b', 'Neurod6', 'Kcnma1', ## pan-Exc\n                'Prex1', 'Cux2','Rnf144a','Enpp2','Zfp462', ## IT-L23\n                'Foxo3', 'Rorb','Kcnh5','Tspan11','Cadps2', ## IT-L4\n                'Ptgfrn', 'Pip4k2a', 'Susd5','Opn3','Sulf2', ## IT-L5\n                'Xkr7', 'Mgat5','Susd4','Adamts3','Npas2', ## IT-L6\n                'Tcerg1l', 'Khdrbs2', 'Ralgapa2','L3mbtl4','Vat1l',## ET-L5\n                'Tle4', 'Syt6', 'Arhgap25', 'Rnf152', 'Kcnk3', ## CT-L6\n                 'Galnt10', 'Hipk2', 'Kcnab1', 'Dlg5', 'Gng12', ## L6b\n                'Gad1', 'Gad2', 'Abat', 'Slc6a1', 'Stat5b', ## Pan-Inh\n                'Pvalb', 'Man1c1', 'Cemip',## MGE-Pvalb\n                'Sst', 'Grin3a','Grik3', ## MGE-Sst\n                'Vip', 'Vav2','Npas3', ## CGE-Vip\n                'Lamp5', 'Pip5k1b', 'Fgf13',## CGE-Lamp5\n                'Slc1a2', 'Trim9', 'Paqr8', 'Cpe', 'Slc1a3', ## ASC\n                'Mobp', 'Mbp', 'Mog', 'Pde4b', 'Klh12', ## ODC\n                'Pdgfra', 'Xylt1', 'Chst11', 'Cacng4', 'Tnr', ## OPC\n                'Csf1r', 'P2ry13', 'Fcrls', 'Zfp710', 'Laptm5' ## MGC\n                )\noptions(repr.plot.width = 13, repr.plot.height = 6, repr.plot.res = 300)\nscCustomize::Clustered_DotPlot(seu_obj, features = unique(sel.gene),\n                               plot_km_elbow = FALSE, flip = TRUE,cluster_feature = FALSE,\n                               colors_use_exp=rev(colorRampPalette(brewer.pal(8, \"RdBu\"))(250)))\n\nWarning message:\n“‘timedatectl’ indicates the non-existent timezone name ‘n/a’”\nunable to deduce timezone name from ‘America/Chicago’\n\nWarning message:\n“The following features were omitted as they were not found:\nℹ Klh12 and Fcrls”\noptions(repr.plot.width = 13, repr.plot.height = 6, repr.plot.res = 300)\nseu_obj@meta.data %&gt;%\n  group_by(seurat_clusters) %&gt;%\n  count() %&gt;%\n  ggplot(aes(x=seurat_clusters,y=n)) +\n  geom_col(fill=NA,color='black') +\n    geom_text(aes(label = n),\n              position = position_stack(vjust = 1.1),size=3)+\n    theme_minimal()+\n  ggtitle(\"Cell numbers in each cluster\")\nseu_obj@meta.data %&gt;%\n  group_by(seurat_clusters,sampleID) %&gt;%\n  count() %&gt;%\n  group_by(seurat_clusters) %&gt;%\n  mutate(percent=100*n/sum(n)) %&gt;%\n  ungroup() %&gt;%\n  ggplot(aes(x=seurat_clusters,y=percent, fill=sampleID)) +\n  geom_col() +\n  ggtitle(\"Percentage of samples per cluster\")\noptions(repr.plot.width = 6, repr.plot.height = 3, repr.plot.res = 300)\np1 &lt;- seu_obj@meta.data %&gt;%\n    ggplot(aes(x=group,y=nCount_RNA))+\n    geom_boxplot()+\n    theme_minimal()+\n    scale_x_discrete(name=\"\")\n\np2 &lt;- seu_obj@meta.data %&gt;%\n    ggplot(aes(x=group,y=nFeature_RNA))+\n    geom_boxplot()+\n    theme_minimal()+\n    scale_x_discrete(name=\"\")\np3 &lt;- seu_obj@meta.data %&gt;%\n    ggplot(aes(x=sex,y=nCount_RNA))+\n    geom_boxplot()+\n    theme_minimal()+\n    scale_x_discrete(name=\"\")\n\np4 &lt;- seu_obj@meta.data %&gt;%\n    ggplot(aes(x=sex,y=nFeature_RNA))+\n    geom_boxplot()+\n    theme_minimal()+\n    scale_x_discrete(name=\"\")\n\np1|p2|p3|p4\n## make plot highlighting each cluster\npdf(\"./cluster_highlight_plot_2.pdf\", onefile = TRUE)\nfor(cell_cluster in sort(unique(seu_obj@meta.data$seurat_clusters))){    \n    p &lt;- \n    scCustomize::Cluster_Highlight_Plot(\n      seu_obj,\n      cluster_name=cell_cluster,\n      highlight_color = \"red\",\n      background_color = \"lightgray\",\n      pt.size = NULL,\n      aspect_ratio = NULL,\n      figure_plot = FALSE,\n      raster = NULL,\n      raster.dpi = c(512, 512)\n    )\n    print(p)\n}\ndev.off()\n\npng: 2\npdf(\"./celltype_marker_plots_recluster_2.pdf\", onefile = TRUE)\nfor (i in seq(length(sel.gene))) {\n   p &lt;- make_scatterplot(seu_obj,sel.gene[i])\n    print(p)\n}\ndev.off()\npdf(\"./cluster_marker_plots_recluster_2.pdf\", onefile = TRUE)\nfor (i in seq(length(top10$gene))) {\n   p &lt;- make_scatterplot(seu_obj,top10$gene[i])\n    print(p)\n}\ndev.off()"
  },
  {
    "objectID": "cluster_annotation.html#cell-type-annotation",
    "href": "cluster_annotation.html#cell-type-annotation",
    "title": "Finding DEFs",
    "section": "Cell type annotation",
    "text": "Cell type annotation\n\nAdd celltype information into metadata\n\nseu_obj@meta.data$sampleGroup &lt;- paste(seu_obj@meta.data$group,seu_obj@meta.data$sex,sep=\"-\")\n\n\nseu_obj@meta.data &lt;-  \nseu_obj@meta.data %&gt;%\nmutate(celltype =case_when(seurat_clusters %in% c(\"1\",\"25\") ~ \"L6 CT\",\n             seurat_clusters %in% c(\"0\",\"2\") ~ \"L2/3 IT\",\n             seurat_clusters %in% c(\"3\",\"9\") ~ \"L4 IT\",\n              seurat_clusters == \"5\" ~ \"OPC\",\n                seurat_clusters == \"6\" ~ \"Pvalb-Inh\",      \n              seurat_clusters == \"7\" ~ \"L5 ET\",\n              seurat_clusters %in% c(\"8\",\"11\",\"12\",\"13\") ~ \"L6 IT\",\n              seurat_clusters == \"10\" ~ \"Sst-Inh\",\n                seurat_clusters == \"14\" ~ \"L5/6 NP\",\n                seurat_clusters %in% c(\"4\") ~ \"L5 IT\",\n                seurat_clusters %in% c(\"15\",\"23\") ~ \"CGE-Inh\",\n              seurat_clusters %in% c(\"16\",\"17\") ~ \"ASC\",\n              seurat_clusters %in% c(\"19\") ~ \"ODC\",\n              seurat_clusters == \"20\" ~ \"STR\",\n              seurat_clusters == \"21\" ~ \"ODC\",\n              seurat_clusters == \"18\" ~ \"Endo\",\n              seurat_clusters %in% c(\"22\",\"24\") ~ \"NA\"\n             ))\n\n\nunique(seu_obj@meta.data$celltype)\n\n\n'Sst-Inh''L6 IT''L5/6 NP''L4 IT''CGE-Inh''L2/3 IT''L6 CT''ASC''L5 ET''Pvalb-Inh''L5 IT''Endo''NA''ODC''OPC''STR'\n\n\n\nseu_obj = subset(x = seu_obj, subset= celltype %in% c('Sst-Inh','L5 IT','L6 IT','L5/6 NP','L5 ET','L4 IT','CGE-Inh','L2/3 IT','L6 CT','ASC','Pvalb-Inh','Endo','ODC','STR','OPC') )\n\n\nunique(seu_obj@meta.data$celltype)\n\n\n'Sst-Inh''L6 IT''L5/6 NP''L4 IT''CGE-Inh''L2/3 IT''L6 CT''ASC''L5 ET''Pvalb-Inh''L5 IT''Endo''ODC''OPC''STR'\n\n\n\nseu_obj@meta.data &lt;- seu_obj@meta.data %&gt;%\n    mutate(celltype_color=case_when(celltype == \"L2/3 IT\" ~ \"#D9F0A3\",\n                                  celltype == \"L4 IT\" ~ \"#C77963\",\n                                  celltype == \"L5 IT\" ~ \"#FDDCFF\",\n                                    celltype == \"L6 IT\" ~ \"#B832E5\",\n                                    celltype == \"L5/6 NP\" ~ \"#AD6C49\",\n                                  celltype == \"L5 ET\" ~ \"#B28D9A\",\n                                  celltype == \"L6 CT\" ~ \"#0094C2\",\n                                  celltype == \"CGE-Inh\" ~ \"#CEFF00\",\n                                  celltype == \"Sst-Inh\" ~ \"#C8C8C8\",\n                                  celltype == \"Pvalb-Inh\" ~ \"#0640FF\",\n                                  celltype == \"ASC\" ~ \"#00B7FF\",\n                                  celltype == \"ODC\" ~ \"#0DFF00\",\n                                    celltype == \"OPC\" ~ \"#81AA70\",\n                                  celltype == \"STR\" ~ \"#ADBF00\",\n                                   celltype == \"Endo\" ~ \"#9E7153\"))\n\n\ncelltype_order &lt;- c(\"L2/3 IT\",\"L4 IT\",\"L5 IT\",\"L6 IT\",\"L5/6 NP\",\"L6 CT\",\"L5 ET\",\"CGE-Inh\",\"Sst-Inh\",\"Pvalb-Inh\",\"ASC\",\"ODC\",\"OPC\",\"Endo\",\"STR\")\ncelltype_label &lt;- c(\"L2/3 IT\",\"L4 IT\",\"L5 IT\",\"L6 IT\",\"L5/6 NP\",\"L6 CT\",\"L5 ET\",\"CGE-Inh\",\"Sst-Inh\",\"Pvalb-Inh\",\"ASC\",\"ODC\",\"OPC\",\"Endo\",\"STR\")\nseu_obj@meta.data$celltype &lt;- factor(seu_obj@meta.data$celltype,levels=celltype_order)\n\n\nsaveRDS(seu_obj,file=\"/project/zhuzhuzhang/lyang/scaleBio_RNA_rat_brain/out_mRatBN/merged_seurat_obj_celltype_annotated_2.rds\")"
  },
  {
    "objectID": "cluster_annotation.html#cell-type-distribution-across-samples",
    "href": "cluster_annotation.html#cell-type-distribution-across-samples",
    "title": "Finding DEFs",
    "section": "cell type distribution across samples",
    "text": "cell type distribution across samples\n\noptions(repr.plot.width = 10, repr.plot.height = 4, repr.plot.res = 300)\nseu_obj@meta.data %&gt;%\n  group_by(celltype,sample_name) %&gt;%\n  count() %&gt;%\n  group_by(sample_name) %&gt;%\n  mutate(percent=100*n/sum(n)) %&gt;%\n  ungroup() %&gt;%\n  mutate(celltype_color=case_when(celltype == \"L2/3 IT\" ~ \"#D9F0A3\",\n                                  celltype == \"L4 IT\" ~ \"#C77963\",\n                                  celltype == \"L5 IT\" ~ \"#FDDCFF\",\n                                    celltype == \"L6 IT\" ~ \"#B832E5\",\n                                    celltype == \"L5/6 NP\" ~ \"#AD6C49\",\n                                  celltype == \"L5 ET\" ~ \"#B28D9A\",\n                                  celltype == \"L6 CT\" ~ \"#0094C2\",\n                                  celltype == \"CGE-Inh\" ~ \"#CEFF00\",\n                                  celltype == \"Sst-Inh\" ~ \"#C8C8C8\",\n                                  celltype == \"Pvalb-Inh\" ~ \"#0640FF\",\n                                  celltype == \"ASC\" ~ \"#00B7FF\",\n                                  celltype == \"ODC\" ~ \"#0DFF00\",\n                                    celltype == \"OPC\" ~ \"#81AA70\",\n                                  celltype == \"Endo\" ~ \"#9E7153\",\n                                  celltype == \"STR\" ~ \"#ADBF00\"\n                                   ))%&gt;%\n  mutate(celltype_color=factor(celltype_color,\n                               levels=c(\"#D9F0A3\",\"#C77963\",\"#FDDCFF\",\"#B832E5\",\"#AD6C49\",\"#B28D9A\",\"#0094C2\",\"#CEFF00\",\n                                        \"#C8C8C8\",\"#0640FF\",\"#00B7FF\",\"#0DFF00\",\"#81AA70\",\"#9E7153\",\"#ADBF00\"))) %&gt;%\n  mutate(celltype=factor(celltype,levels=!!celltype_order,labels=!!celltype_label)) %&gt;%\n  ggplot(aes(x=sample_name,y=percent, fill=celltype_color)) +\n  geom_col() +\n  scale_fill_identity(guide = \"legend\", labels = celltype_label) +\n  ggtitle(\"Percentage of cell types per sample\") +\n  theme_minimal() +\n  labs(x = \"Sample ID\", y = \"Percentage\", fill = \"Cell Type\")"
  },
  {
    "objectID": "DEG_analysis_iso_vs_soc.html",
    "href": "DEG_analysis_iso_vs_soc.html",
    "title": "Perform DEG analysis",
    "section": "",
    "text": "library(Seurat)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(patchwork)\nlibrary(stringr)\nlibrary(ggplot2)\n## https://drive.google.com/file/d/16Jq6w_KAWwI2rBN7SYBw-7bm5qwVoFyt/view?usp=drive_link\nseu_obj &lt;- readRDS(file=\"/project/zhuzhuzhang/lyang/scaleBio_RNA_rat_brain/out_mRatBN/merged_seurat_obj_celltype_annotated_2.rds\")\n# pseudobulk the counts based on donor-condition-celltype\npseudo_seu &lt;- AggregateExpression(seu_obj, \n                                  assays = \"RNA\", \n                                  return.seurat = T, \n                                  group.by = c(\"sample_name\",\"celltype\"),\n                                 normalization.method = NULL)\n\ntail(Cells(pseudo_seu))\n\nNames of identity class contain underscores ('_'), replacing with dashes ('-')\nThis message is displayed once every 8 hours.\n\n\n\n'soc-M-3_Pvalb-Inh''soc-M-3_ASC''soc-M-3_ODC''soc-M-3_OPC''soc-M-3_Endo''soc-M-3_STR'\npseudo_seu\n\nAn object of class Seurat \n26597 features across 175 samples within 1 assay \nActive assay: RNA (26597 features, 0 variable features)\n 2 layers present: counts, data\npseudo_seu$celltype.group &lt;- \n    paste(pseudo_seu$celltype, str_split(pseudo_seu$sample_name,\"-\",simplify = T)[,1], sep = \"_\")\nhead(pseudo_seu@meta.data)\n\n\nA data.frame: 6 × 4\n\n\n\norig.ident\nsample_name\ncelltype\ncelltype.group\n\n\n\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n\n\n\n\niso-F-1_L2/3 IT\niso-F-1_L2/3 IT\niso-F-1\nL2/3 IT\nL2/3 IT_iso\n\n\niso-F-1_L4 IT\niso-F-1_L4 IT\niso-F-1\nL4 IT\nL4 IT_iso\n\n\niso-F-1_L5 IT\niso-F-1_L5 IT\niso-F-1\nL5 IT\nL5 IT_iso\n\n\niso-F-1_L6 IT\niso-F-1_L6 IT\niso-F-1\nL6 IT\nL6 IT_iso\n\n\niso-F-1_L5/6 NP\niso-F-1_L5/6 NP\niso-F-1\nL5/6 NP\nL5/6 NP_iso\n\n\niso-F-1_L6 CT\niso-F-1_L6 CT\niso-F-1\nL6 CT\nL6 CT_iso\nsaveRDS(pseudo_seu,file = \"./pseudo_Seu_obj_2.rds\")\nIdents(pseudo_seu) &lt;- \"celltype.group\"\npseudo_de &lt;- list()\nbulk.L5IT.de.L5IT &lt;- FindMarkers(object = pseudo_seu, \n                         ident.1 = \"L5 IT_iso\", \n                         ident.2 = \"L5 IT_soc\",\n                         test.use = \"DESeq2\")\nhead(bulk.L5IT.de.L5IT)\n\n\nA data.frame: 6 × 5\n\n\n\np_val\navg_log2FC\npct.1\npct.2\np_val_adj\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nSlit2\n2.949433e-10\n0.6359687\n1\n1\n7.844608e-06\n\n\nSamd5\n7.635090e-09\n-0.6475878\n1\n1\n2.030705e-04\n\n\nLOC102548918\n2.099395e-07\n-0.8479969\n1\n1\n5.583761e-03\n\n\nHecw2\n2.247698e-07\n0.3547454\n1\n1\n5.978203e-03\n\n\nNpas2\n3.742395e-07\n-0.3196543\n1\n1\n9.953649e-03\n\n\nThrb\n8.550333e-07\n-0.3182722\n1\n1\n2.274132e-02\npseudo_de &lt;- list()\nfor(i in unique(pseudo_seu$celltype)){\n    bulk.de &lt;- FindMarkers(object = pseudo_seu,\n                              ident.1 = paste0(i,\"_iso\"),\n                              ident.2 = paste0(i,\"_soc\"),\n                               test.use = \"DESeq2\")\n    \n    pseudo_de[[i]] &lt;- bulk.de\n}\nnames(pseudo_de)\n\n\n'L2/3 IT''L4 IT''L5 IT''L6 IT''L5/6 NP''L6 CT''L5 ET''CGE-Inh''Sst-Inh''Pvalb-Inh''ASC''ODC''OPC''Endo'\nSTR is missing from the DEG analysis, since it’s missing in some samples\nsapply(pseudo_de,nrow)\n\nL2/3 IT25760L4 IT24656L5 IT24447L6 IT25525L5/6 NP21544L6 CT24828L5 ET24419CGE-Inh21304Sst-Inh22659Pvalb-Inh23400ASC21558ODC19982OPC23623Endo17601"
  },
  {
    "objectID": "DEG_analysis_iso_vs_soc.html#plot-deg-number-and-cell-count",
    "href": "DEG_analysis_iso_vs_soc.html#plot-deg-number-and-cell-count",
    "title": "Perform DEG analysis",
    "section": "Plot DEG number and cell count",
    "text": "Plot DEG number and cell count\n\np1 &lt;- \nseu_obj@meta.data %&gt;%\n    count(celltype) %&gt;%\n    ggplot(aes(x=celltype,y=n))+\n    geom_bar(stat = \"identity\",fill=\"darkgrey\")+\n    geom_text(aes(label = n), vjust = 0.5,size=4)+\n    labs(x=\"\",y=\"# of cells\")+\n    theme_minimal()+\n    theme(axis.text.x=element_text(angle=90,hjust=1,color='black'),\n         plot.margin = unit(c(0,0,0,0), \"cm\"))\n\n\np1\n\n\n\n\n\n\n\n\n\np2 &lt;- \ndo.call(rbind,Map(cbind, pseudo_de, new_clumn = names(pseudo_de))) %&gt;%\nmutate(diff=case_when(p_val_adj&lt;0.05 & avg_log2FC&gt;0.3 ~ \"up\",\n                     p_val_adj&lt;0.05 & avg_log2FC&lt; (-0.3) ~ \"down\",\n                     .default = \"nonsig\")\n      ) %&gt;%\ncount(new_clumn,diff) %&gt;%\nmutate(plot_y=ifelse(diff==\"down\",(-1)*n,n)) %&gt;%\nfilter(new_clumn!=\"NA\",diff!=\"nonsig\") %&gt;%\nmutate(new_clumn=factor(new_clumn,levels=levels(seu_obj@meta.data$celltype))) %&gt;%\nggplot(aes(x=new_clumn,y=plot_y,fill=diff))+\ngeom_bar(stat = \"identity\")+\ngeom_hline(yintercept = 0)+\nlabs(x=\"\",y=\"# of DEGs\",fill=\"iso/soc\")+\ngeom_text(aes(label = abs(plot_y)), vjust = 0.5,size=5)+\nscale_fill_manual(values=c(\"#85a0ab\",\"#eb9c81\"))+\nscale_y_continuous(breaks=c(-300,-200,-100,0,100,200),labels=c(300,200,100,0,100,200))+\ntheme_classic()+\ntheme(panel.grid = element_blank(),\n      axis.text.x = element_text(angle=90,color='black',hjust=1,size=11),\n      #axis.text.x = element_blank(),\n      axis.ticks.x = element_blank(),\n     plot.margin = unit(c(0,0,0,0), \"cm\"))\n\n\np2 &lt;- do.call(rbind,Map(cbind, pseudo_de, new_clumn = names(pseudo_de))) %&gt;%\nmutate(diff=case_when(p_val_adj&lt;0.05 & avg_log2FC&gt;0.3 ~ \"up\",\n                     p_val_adj&lt;0.05 & avg_log2FC&lt; (-0.3) ~ \"down\",\n                     .default = \"nonsig\")\n      ) %&gt;%\ncount(new_clumn,diff) %&gt;%\nmutate(plot_y=ifelse(diff==\"down\",(-1)*n,n)) %&gt;%\nfilter(new_clumn!=\"NA\",diff!=\"nonsig\") %&gt;%\nadd_row(new_clumn=c(\"L5/6 NP\",\"Sst-Inh\",\"Pvalb-Inh\",\"ASC\",\"ODC\",\"Endo\",\"STR\"),diff=\"up\",n=0,plot_y=0) %&gt;%\nmutate(new_clumn=factor(new_clumn,levels=levels(seu_obj@meta.data$celltype))) %&gt;%\nggplot(aes(x=new_clumn,y=plot_y,fill=diff))+\ngeom_bar(stat = \"identity\")+\ngeom_hline(yintercept = 0)+\nlabs(x=\"\",y=\"# of DEGs\",fill=\"iso/soc\")+\ngeom_text(aes(label = abs(plot_y)), vjust = 0.5,size=5)+\nscale_fill_manual(values=c(\"#85a0ab\",\"#eb9c81\"))+\nscale_y_continuous(breaks=c(-300,-200,-100,0,100,200),labels=c(300,200,100,0,100,200))+\ntheme_classic()+\ntheme(panel.grid = element_blank(),\n      axis.text.x = element_text(angle=90,color='black',hjust=1,size=11),\n      #axis.text.x = element_blank(),\n      axis.ticks.x = element_blank(),\n     plot.margin = unit(c(0,0,0,0), \"cm\"))\n\n\noptions(repr.plot.width = 10, repr.plot.height = 4, repr.plot.res = 300)\np2\n\n\n\n\n\n\n\n\n\npdf(\"./DEG_FC0.3_counts_barplot_2.pdf\",width=10,height=6)\np2/p1 + plot_layout(heights = c(2, 1))+ plot_annotation(title='threshold: p.adjust&lt;0.05 & |logFC|&gt;0.3')\ndev.off()\n\npng: 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ScaleBio run on rat brain tissues from social isolation study",
    "section": "",
    "text": "Lin Yang\n\n\nThree replicates for female and male rat treated with social isolation and social grouped respectively are included in the experiment. The treatment was exerted from p41-p55. Then, orbitofrontal cortex are dissected from frozen brain tissues and Hang did the nuclei preparation and library preparation with ScaleBio RNA-seq kit.\nThe sample loading order on the RT plate are stored at this spreadsheet.\nA relavant presentation for this project is available at: presentation\n\n\n\n\ndata preprocess\n\nThe library sequencing was ran on Illumina sequencer and demultiplexed by i5 barcode by the sequencing core in UofC. Four .fastq files are returned from the core:\n\nUndetermined_S0_L002_I1_001.fastq.gz: i7 index\nUndetermined_S0_L002_I2_001.fastq.gz: i5 index\nUndetermined_S0_L002_R1_001.fastq.gz: reads1, recording barcode sequences\nUndetermined_S0_L002_R2_001.fastq.gz: reads2, recording cDNA sequences\n\nThe data preprocessing are implemented with pipeline from ScaleBio with the command:\nmodule load singularity\nnextflow run /project/zhuzhuzhang/lyang/software/ScaleRna/ -params-file runParams.yml -profile singularity --outDir /project/zhuzhuzhang/lyang/scaleBio_RNA_rat_brain/out_mRatBN —-splitFastq true\ninputs:\nrunParams.yml\noutputs:\nquality control (/project/zhuzhuzhang/lyang/scaleBio_RNA_rat_brain/out_mRatBN/samples)\ncell by feature matrix (/project/zhuzhuzhang/lyang/scaleBio_RNA_rat_brain/out_mRatBN/alignment)\n\ncell clustering\n\nCell clustering was perform in R with Seurat package\n\nMarker gene indentification in each cluster and cell type annotation\n\nMarker genes in each cluster are identified with FindAllmarker function in Seurat. The top 10 genes are saved and manually compared with the database to annotate the cell types for each cluster.\nscript\noutputs:\nCluster highlighted in umaps. The umap projections of expression marker gene. Cell type annotation gene list.\n\ndifferential expression analysis between social isolation and social grouped samples\n\nThe comparison are based on pseudobulk expression of each cell type in each sample.\nscript\noutputs:\nDEG counts in each cell type between iso and soc groups gene lists from the DEG analysis and filtered significantly differentially expressed genes with criteria: adjusted.p&lt;0.05 & |log2FC|&gt;0.3\n\nvisualization on the DEGs between social isolation and social grouped comparison\n\nscript\noutputs:\nheatmap for log2FC of DEGs in iso&soc comparison Violin plots of DEG expression in iso and soc groups umap projecting the expression level of DEGs in each cell\n\ndifferential expression analysis between female and male samples with social isolation and social grouped groups\n\nscript\noutputs:\ngene lists from the DEG analysis and filtered significantly differentially expressed genes with criteria: adjusted.p&lt;0.05 & |log2FC|&gt;0.3\n\nvisualization on the DEGs between female and male comparison\n\nscript\noutputs:\nheatmaps:\nheatmap for log2FC of DEGs in F&M comparison\numaps:\numap projecting the expression level of DEGs between F&M comparison in soc group &\numap projecting the expression level of DEGs between F&M comparison in iso group\nviolin plot:\nviolin plot of gene expression of DEGs between F&M comparison in soc group\nviolin plot of gene expression of DEGs between F&M comparison in iso group\n\ngenomic track visualization\n\nsteps involved:\n\nsplit the integrated .bam files into individual cell based on the barcode information\nTo gather the single-cell .bam files to the same folder annotated as the same cell type (not necessarily move to same folder, create softlink works)\nMerge the .bam files together for each cell type in each sample\nMake .bigwig from the merged .bam file\nmake Genome tracks with pygenometrack"
  },
  {
    "objectID": "index.html#project-description",
    "href": "index.html#project-description",
    "title": "ScaleBio run on rat brain tissues from social isolation study",
    "section": "",
    "text": "Three replicates for female and male rat treated with social isolation and social grouped respectively are included in the experiment. The treatment was exerted from p41-p55. Then, orbitofrontal cortex are dissected from frozen brain tissues and Hang did the nuclei preparation and library preparation with ScaleBio RNA-seq kit.\nThe sample loading order on the RT plate are stored at this spreadsheet.\nA relavant presentation for this project is available at: presentation"
  },
  {
    "objectID": "index.html#data-processing-steps",
    "href": "index.html#data-processing-steps",
    "title": "ScaleBio run on rat brain tissues from social isolation study",
    "section": "",
    "text": "data preprocess\n\nThe library sequencing was ran on Illumina sequencer and demultiplexed by i5 barcode by the sequencing core in UofC. Four .fastq files are returned from the core:\n\nUndetermined_S0_L002_I1_001.fastq.gz: i7 index\nUndetermined_S0_L002_I2_001.fastq.gz: i5 index\nUndetermined_S0_L002_R1_001.fastq.gz: reads1, recording barcode sequences\nUndetermined_S0_L002_R2_001.fastq.gz: reads2, recording cDNA sequences\n\nThe data preprocessing are implemented with pipeline from ScaleBio with the command:\nmodule load singularity\nnextflow run /project/zhuzhuzhang/lyang/software/ScaleRna/ -params-file runParams.yml -profile singularity --outDir /project/zhuzhuzhang/lyang/scaleBio_RNA_rat_brain/out_mRatBN —-splitFastq true\ninputs:\nrunParams.yml\noutputs:\nquality control (/project/zhuzhuzhang/lyang/scaleBio_RNA_rat_brain/out_mRatBN/samples)\ncell by feature matrix (/project/zhuzhuzhang/lyang/scaleBio_RNA_rat_brain/out_mRatBN/alignment)\n\ncell clustering\n\nCell clustering was perform in R with Seurat package\n\nMarker gene indentification in each cluster and cell type annotation\n\nMarker genes in each cluster are identified with FindAllmarker function in Seurat. The top 10 genes are saved and manually compared with the database to annotate the cell types for each cluster.\nscript\noutputs:\nCluster highlighted in umaps. The umap projections of expression marker gene. Cell type annotation gene list.\n\ndifferential expression analysis between social isolation and social grouped samples\n\nThe comparison are based on pseudobulk expression of each cell type in each sample.\nscript\noutputs:\nDEG counts in each cell type between iso and soc groups gene lists from the DEG analysis and filtered significantly differentially expressed genes with criteria: adjusted.p&lt;0.05 & |log2FC|&gt;0.3\n\nvisualization on the DEGs between social isolation and social grouped comparison\n\nscript\noutputs:\nheatmap for log2FC of DEGs in iso&soc comparison Violin plots of DEG expression in iso and soc groups umap projecting the expression level of DEGs in each cell\n\ndifferential expression analysis between female and male samples with social isolation and social grouped groups\n\nscript\noutputs:\ngene lists from the DEG analysis and filtered significantly differentially expressed genes with criteria: adjusted.p&lt;0.05 & |log2FC|&gt;0.3\n\nvisualization on the DEGs between female and male comparison\n\nscript\noutputs:\nheatmaps:\nheatmap for log2FC of DEGs in F&M comparison\numaps:\numap projecting the expression level of DEGs between F&M comparison in soc group &\numap projecting the expression level of DEGs between F&M comparison in iso group\nviolin plot:\nviolin plot of gene expression of DEGs between F&M comparison in soc group\nviolin plot of gene expression of DEGs between F&M comparison in iso group\n\ngenomic track visualization\n\nsteps involved:\n\nsplit the integrated .bam files into individual cell based on the barcode information\nTo gather the single-cell .bam files to the same folder annotated as the same cell type (not necessarily move to same folder, create softlink works)\nMerge the .bam files together for each cell type in each sample\nMake .bigwig from the merged .bam file\nmake Genome tracks with pygenometrack"
  },
  {
    "objectID": "DEG_analysis_F_vs_M.html",
    "href": "DEG_analysis_F_vs_M.html",
    "title": "perform DEG analysis on sex",
    "section": "",
    "text": "library(Seurat)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(patchwork)\nlibrary(stringr)\nlibrary(ggplot2)\n# https://drive.google.com/file/d/1XbDy0A_rLt-kTDQvtqyCCGJ__qxdym7e/view?usp=drive_link\npseudo_seu &lt;- readRDS(file = \"./pseudo_Seu_obj_2.rds\")\npseudo_seu$sex &lt;- stringr::str_split(pseudo_seu$sample_name,\"-\",simplify = T)[,2]\npseudo_seu$celltype.sex &lt;- paste(pseudo_seu$celltype,pseudo_seu$sex,sep = \"_\")\npseudo_seu$group.celltype.sex &lt;- paste(str_split(pseudo_seu$sample_name,\"-\",simplify = T)[,1],\n                                 pseudo_seu$celltype.sex,sep = \"_\")\nIdents(pseudo_seu) &lt;- \"group.celltype.sex\"\npseudo_de_sex &lt;- list()\nfor(i in unique(pseudo_seu$celltype)){\n    for(j in c(\"iso\",\"soc\")){\n        bulk.de &lt;- FindMarkers(object = pseudo_seu,\n                              ident.1 = paste0(j,\"_\",i,\"_F\"),\n                              ident.2 = paste0(j,\"_\",i,\"_M\"),\n                               test.use = \"DESeq2\")\n    \n        pseudo_de_sex[[paste0(i,\"_\",j)]] &lt;- bulk.de\n    }\n    \n}\nfilename = str_replace_all(string =names(pseudo_de_sex) ,pattern = \"\\\\/\" ,replacement = \"\")\n## save all gene list\nlapply(seq_len(length(names(pseudo_de_sex))),function(x){\n            pseudo_de_sex[[x]] %&gt;%\n            write.table(,file=paste0(\"./FvsM_FC0.3.DEG.list_2/\",filename[x],\"_F_vs_M_total_gene.xls\"),sep=\"\\t\",quote=F)\n    }  \n)\nlapply(seq_len(length(names(pseudo_de_sex))), function(x) {\n    if (sum(pseudo_de_sex[[x]]$p_val_adj &lt; 0.05 & abs(pseudo_de_sex[[x]]$avg_log2FC) &gt; 0.3,na.rm = TRUE) &gt; 0) {\n        filtered_data &lt;- pseudo_de_sex[[x]] %&gt;%\n            filter(p_val_adj &lt; 0.05, abs(avg_log2FC) &gt; 0.3)\n        \n        write.table(filtered_data, \n                    file = paste0(\"./FvsM_FC0.3.DEG.list_2/\", filename[x], \"_F_vs_M_DEG.xls\"), \n                    sep = \"\\t\", \n                    quote = FALSE, \n                    row.names = TRUE)\n    }\n})\nsaveRDS(pseudo_de_sex,file = \"./pseudo_sex_DESeq2_DEG_2.rds\")\npseudo_de_sex &lt;- readRDS(file = \"./pseudo_sex_DESeq2_DEG_2.rds\")"
  },
  {
    "objectID": "DEG_analysis_F_vs_M.html#go-analysis-for-sex-group-degs",
    "href": "DEG_analysis_F_vs_M.html#go-analysis-for-sex-group-degs",
    "title": "perform DEG analysis on sex",
    "section": "GO analysis for sex group DEGS",
    "text": "GO analysis for sex group DEGS\n\nDEG_ls &lt;- lapply(pseudo_de_sex, function(x){ x %&gt;% filter(p_val_adj&lt;0.05,abs(avg_log2FC) &gt;0.3) %&gt;% row.names()})\nnames(DEG_ls) = str_replace_all(string =names(DEG_ls) ,pattern = \"\\\\/\" ,replacement = \"\")\nGO_ls &lt;- list()\nfor(i in seq_len(length(DEG_ls))){\n    if(length(DEG_ls[[i]])&gt;5){\n           go_res &lt;- enrichGO(DEG_ls[[i]],OrgDb=org.Rn.eg.db,keyType=\"SYMBOL\",ont=\"BP\",pvalueCutoff  = 0.05, qvalueCutoff  = 1)\n          if(!is.null(go_res@result)){\n              GO_ls[names(DEG_ls)[i]] &lt;- go_res\n          }\n           }\n}\ncp_GO_ls &lt;- GO_ls\n\nwrite.xlsx(lapply(cp_GO_ls,function(df){df@result}),file=\"./FvsM_DEG_GO_2/FvsM_DEG_FC0.3_GO.xlsx\",asTable=T)\n\n\npdf(\"/project/zhuzhuzhang/lyang/scaleBio_RNA_rat_brain/out_mRatBN/FvsM_DEG_GO_2/FvsM_DEG_FC0.3_GO_dotplot.pdf\",onefile=TRUE)\nlapply(seq_along(GO_ls),\n       function(i){\n           if(!is.null(GO_ls[[i]])){\n           if(dim(GO_ls[[i]]@result)[1]&gt;0){\n               if(sum(GO_ls[[i]]@result$p.adjust&lt;0.05)&gt;0){\n                   GO_ls[[i]]@result %&gt;%\n                   filter(p.adjust&lt;0.05) %&gt;%\n                       mutate(ratio=as.numeric(str_split(GeneRatio,\"/\",simplify=T)[,1])/as.numeric(str_split(GeneRatio,\"/\",simplify=T)[,2])) %&gt;%\n                       slice_head(n=15) %&gt;%\n                        arrange(ratio) %&gt;%\n                        mutate(Description=factor(Description,levels=Description)) %&gt;%\n                       ggplot(aes(x=ratio,y=Description))+\n                       geom_point(aes(color=p.adjust,size=ratio))+\n                       labs(title=paste0(names(GO_ls)[i],\" \",\"F vs M \",\"(\",length(DEG_ls[[i]]) ,\")\"))+\n                       scale_y_discrete(labels = function(x) str_wrap(x, width = 50))+\n                        scale_color_viridis(option = \"D\")\n                   }\n               \n           }\n            }\n           }\n)\ndev.off()"
  },
  {
    "objectID": "cell_clustering.html",
    "href": "cell_clustering.html",
    "title": "QC and Cell-level filtering",
    "section": "",
    "text": "library(Seurat)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(patchwork)\nlibrary(stringr)\nlibrary(ggplot2)\nseurat_obj_ls &lt;- \n    lapply(c('iso-F-04','iso-F-22','iso-F-35','iso-M-00','iso-M-23','iso-M-40','soc-F-05','soc-F-24','soc-F-36','soc-M-01','soc-M-25','soc-M-41'),\n       function(x){\n           cell.use &lt;- read.csv(paste0(\"./samples/\",x,\".Rat.allCells.csv\"))%&gt;% \n            filter(pass==\"True\") %&gt;%\n            pull(X)\n        Read10X(paste0(\"alignment/\",x,\".Rat/\",x,\".Rat.star.solo/GeneFull_Ex50pAS/raw/\")) %&gt;%\n           CreateSeuratObject(project = \"Rat\", min.cells = 3, min.features = 200) %&gt;%       \n            subset(cells = cell.use)\n           })\nSeurat_merged &lt;- merge(seurat_obj_ls[[1]],seurat_obj_ls[-1],project=\"Rat\",\n                       add.cell.ids =c('iso-F-04','iso-F-22','iso-F-35','iso-M-00','iso-M-23','iso-M-40','soc-F-05','soc-F-24','soc-F-36','soc-M-01','soc-M-25','soc-M-41'))\nSeurat_merged\n\nAn object of class Seurat \n26597 features across 76385 samples within 1 assay \nActive assay: RNA (26597 features, 0 variable features)\n 12 layers present: counts.1, counts.2, counts.3, counts.4, counts.5, counts.6, counts.7, counts.8, counts.9, counts.10, counts.11, counts.12\nSeurat_merged[[\"RNA\"]] &lt;-JoinLayers(Seurat_merged[[\"RNA\"]])\nSeurat_merged\n\nAn object of class Seurat \n26597 features across 76385 samples within 1 assay \nActive assay: RNA (26597 features, 0 variable features)\n 1 layer present: counts\n# The [[ operator can add columns to object metadata. This is a great place to stash QC stats\nSeurat_merged[[\"percent.mt\"]] &lt;- PercentageFeatureSet(Seurat_merged, pattern = \"^Mt-\")\noptions(repr.plot.width = 10, repr.plot.height = 5, repr.plot.res = 300)\n# Visualize QC metrics as a violin plot\np1 &lt;- VlnPlot(Seurat_merged, features = c(\"nFeature_RNA\", \"nCount_RNA\"), ncol = 3,layer='counts')\np1\nobj &lt;- subset(Seurat_merged, subset = nFeature_RNA &gt; 200 & nFeature_RNA &lt; 4000)\nobj\n\nAn object of class Seurat \n26597 features across 76089 samples within 1 assay \nActive assay: RNA (26597 features, 0 variable features)\n 1 layer present: counts"
  },
  {
    "objectID": "cell_clustering.html#normalizing-the-data",
    "href": "cell_clustering.html#normalizing-the-data",
    "title": "QC and Cell-level filtering",
    "section": "Normalizing the data",
    "text": "Normalizing the data\n\nobj &lt;- SCTransform(obj, vst.flavor = 'v2', verbose = FALSE) \n\n\nobj &lt;- obj %&gt;%\n    RunPCA(npcs = 30, verbose = FALSE,features = VariableFeatures(object = obj))\n\n\nVizDimLoadings(obj, dims = 1:2, reduction = \"pca\")\n\n\n\n\n\n\n\n\n\noptions(repr.plot.width = 10, repr.plot.height = 8, repr.plot.res = 300)\nDimHeatmap(obj, dims = 1:9, cells = 500, balanced = TRUE)\n\n\n\n\n\n\n\n\n\noptions(repr.plot.width = 5, repr.plot.height = 4, repr.plot.res = 300)\nElbowPlot(obj)"
  },
  {
    "objectID": "cell_clustering.html#cell-clustering",
    "href": "cell_clustering.html#cell-clustering",
    "title": "QC and Cell-level filtering",
    "section": "cell clustering",
    "text": "cell clustering\n\nobj\n\nAn object of class Seurat \n52115 features across 76089 samples within 2 assays \nActive assay: SCT (25518 features, 3000 variable features)\n 3 layers present: counts, data, scale.data\n 1 other assay present: RNA\n 1 dimensional reduction calculated: pca\n\n\n\nobj &lt;- AddMetaData(\n  object = obj,\n  metadata = stringr::str_split(row.names(obj@meta.data),\"-\",simplify=T)[,1],\n  col.name = 'group'\n)\n\nobj &lt;- AddMetaData(\n  object = obj,\n  metadata = stringr::str_split(row.names(obj@meta.data),\"-\",simplify=T)[,2],\n  col.name = 'sex'\n)\n\n\nhead(obj@meta.data)\n\n\nA data.frame: 6 × 8\n\n\n\norig.ident\nnCount_RNA\nnFeature_RNA\npercent.mt\nnCount_SCT\nnFeature_SCT\ngroup\nsex\n\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;int&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;int&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n\n\n\n\niso-F-04_AAACCATAGACTATGCAATACCAGGCGCA\nRat\n2892\n1519\n0\n3229\n1519\niso\nF\n\n\niso-F-04_AAACCATAGACTATGCAATTCGGATTCGG\nRat\n2971\n1489\n0\n3287\n1489\niso\nF\n\n\niso-F-04_AAACCATAGGGTATGCTTGTCGGATTCGG\nRat\n1996\n1189\n0\n3028\n1208\niso\nF\n\n\niso-F-04_AAACCATAGTCCTACCAGTCTAACTAGGT\nRat\n5871\n2496\n0\n4299\n2456\niso\nF\n\n\niso-F-04_AAACCATAGTCCTACCAGTGTAGGATAAG\nRat\n2068\n1185\n0\n3104\n1190\niso\nF\n\n\niso-F-04_AAACCATAGTCGCGGTTGGTTGATACGAT\nRat\n1922\n1121\n0\n3064\n1153\niso\nF\n\n\n\n\n\n\nobj &lt;- obj %&gt;%\n        FindNeighbors(reduction = \"pca\", dims = 1:15, verbose = FALSE) %&gt;%\n        FindClusters(resolution = 0.7, verbose = FALSE) %&gt;%\n        RunUMAP(reduction = \"pca\", dims = 1:15, verbose = FALSE)\n\n\nobj\n\nAn object of class Seurat \n52115 features across 76089 samples within 2 assays \nActive assay: SCT (25518 features, 3000 variable features)\n 3 layers present: counts, data, scale.data\n 1 other assay present: RNA\n 2 dimensional reductions calculated: pca, umap\n\n\n\noptions(repr.plot.width = 7, repr.plot.height = 5, repr.plot.res = 300)\n# note that you can set `label = TRUE` or use the LabelClusters function to help label\n# individual clusters\nDimPlot(obj, reduction = \"umap\",label = TRUE, repel = TRUE)"
  },
  {
    "objectID": "cell_clustering.html#define-doublet",
    "href": "cell_clustering.html#define-doublet",
    "title": "QC and Cell-level filtering",
    "section": "define doublet",
    "text": "define doublet\n\nlibrary('DoubletFinder')\n\nhomotypic.prop &lt;- modelHomotypic(obj@meta.data$seurat_clusters)           ## ex: annotations &lt;- seu_kidney@meta.data$ClusteringResults\nnExp_poi &lt;- round(0.075*nrow(obj@meta.data))  ## Assuming 7.5% doublet formation rate - tailor for your dataset\nnExp_poi.adj &lt;- round(nExp_poi*(1-homotypic.prop))\n\n## Run DoubletFinder with varying classification stringencies ----------------------------------------------------------------\nseu_obj &lt;- doubletFinder(obj, PCs = 1:10, pN = 0.25, pK = 0.09, nExp = nExp_poi, reuse.pANN = FALSE, sct = TRUE)\n\n\nhead(seu_obj@meta.data)\n\n\nA data.frame: 6 × 12\n\n\n\norig.ident\nnCount_RNA\nnFeature_RNA\npercent.mt\nnCount_SCT\nnFeature_SCT\ngroup\nsex\nSCT_snn_res.0.7\nseurat_clusters\npANN_0.25_0.09_5707\nDF.classifications_0.25_0.09_5707\n\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;int&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;int&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;fct&gt;\n&lt;fct&gt;\n&lt;dbl&gt;\n&lt;chr&gt;\n\n\n\n\niso-F-04_AAACCATAGACTATGCAATACCAGGCGCA\nRat\n2892\n1519\n0\n3229\n1519\niso\nF\n9\n9\n0.3220896\nSinglet\n\n\niso-F-04_AAACCATAGACTATGCAATTCGGATTCGG\nRat\n2971\n1489\n0\n3287\n1489\niso\nF\n10\n10\n0.2795970\nSinglet\n\n\niso-F-04_AAACCATAGGGTATGCTTGTCGGATTCGG\nRat\n1996\n1189\n0\n3028\n1208\niso\nF\n9\n9\n0.3189136\nSinglet\n\n\niso-F-04_AAACCATAGTCCTACCAGTCTAACTAGGT\nRat\n5871\n2496\n0\n4299\n2456\niso\nF\n14\n14\n0.2988720\nSinglet\n\n\niso-F-04_AAACCATAGTCCTACCAGTGTAGGATAAG\nRat\n2068\n1185\n0\n3104\n1190\niso\nF\n5\n5\n0.1328442\nSinglet\n\n\niso-F-04_AAACCATAGTCGCGGTTGGTTGATACGAT\nRat\n1922\n1121\n0\n3064\n1153\niso\nF\n9\n9\n0.3220896\nSinglet\n\n\n\n\n\n\noptions(repr.plot.width = 6, repr.plot.height = 4, repr.plot.res = 300)\n# note that you can set `label = TRUE` or use the LabelClusters function to help label\n# individual clusters\nDimPlot(seu_obj, reduction = \"umap\",label = TRUE, group.by = \"DF.classifications_0.25_0.09_5707\")\n\n\n\n\n\n\n\n\n\nseu_obj &lt;- subset(x = seu_obj, subset = DF.classifications_0.25_0.09_5707==\"Singlet\")\n\n\nseu_obj\n\nAn object of class Seurat \n52115 features across 70382 samples within 2 assays \nActive assay: SCT (25518 features, 3000 variable features)\n 3 layers present: counts, data, scale.data\n 1 other assay present: RNA\n 2 dimensional reductions calculated: pca, umap\n\n\n\nreclustering on the filtered cells\n\nseu_obj &lt;- seu_obj %&gt;%\n        FindNeighbors(reduction = \"pca\", dims = 1:15, verbose = FALSE) %&gt;%\n        FindClusters(resolution = 0.7, verbose = FALSE) %&gt;%\n        RunUMAP(reduction = \"pca\", dims = 1:15, verbose = FALSE)\n\n\noptions(repr.plot.width = 7, repr.plot.height = 5, repr.plot.res = 300)\n# note that you can set `label = TRUE` or use the LabelClusters function to help label\n# individual clusters\nDimPlot(seu_obj, reduction = \"umap\",label = TRUE, repel = TRUE)\n\n\n\n\n\n\n\n\n\nlibrary(dplyr)\nlibrary(stringr)\n\n\nhead(seu_obj@meta.data)\n\n\nA data.frame: 6 × 12\n\n\n\norig.ident\nnCount_RNA\nnFeature_RNA\npercent.mt\nnCount_SCT\nnFeature_SCT\ngroup\nsex\nSCT_snn_res.0.7\nseurat_clusters\npANN_0.25_0.09_5707\nDF.classifications_0.25_0.09_5707\n\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;int&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;int&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;fct&gt;\n&lt;fct&gt;\n&lt;dbl&gt;\n&lt;chr&gt;\n\n\n\n\niso-F-04_AAACCATAGACTATGCAATACCAGGCGCA\nRat\n2892\n1519\n0\n3229\n1519\niso\nF\n10\n10\n0.3220896\nSinglet\n\n\niso-F-04_AAACCATAGACTATGCAATTCGGATTCGG\nRat\n2971\n1489\n0\n3287\n1489\niso\nF\n8\n8\n0.2795970\nSinglet\n\n\niso-F-04_AAACCATAGGGTATGCTTGTCGGATTCGG\nRat\n1996\n1189\n0\n3028\n1208\niso\nF\n10\n10\n0.3189136\nSinglet\n\n\niso-F-04_AAACCATAGTCCTACCAGTCTAACTAGGT\nRat\n5871\n2496\n0\n4299\n2456\niso\nF\n14\n14\n0.2988720\nSinglet\n\n\niso-F-04_AAACCATAGTCCTACCAGTGTAGGATAAG\nRat\n2068\n1185\n0\n3104\n1190\niso\nF\n3\n3\n0.1328442\nSinglet\n\n\niso-F-04_AAACCATAGTCGCGGTTGGTTGATACGAT\nRat\n1922\n1121\n0\n3064\n1153\niso\nF\n10\n10\n0.3220896\nSinglet\n\n\n\n\n\n\nseu_obj@meta.data$sampleID &lt;- str_split(row.names(seu_obj@meta.data),\"_\",simplify = T)[,1]\nseu_obj@meta.data &lt;- \n    seu_obj@meta.data %&gt;%\n    mutate(sample_name = case_when(sampleID == \"iso-F-04\" ~ \"iso-F_1\",\n                                   sampleID == \"iso-F-22\" ~ \"iso-F_2\",\n                                   sampleID == \"iso-F-35\" ~ \"iso-F_3\",\n                                   sampleID == \"iso-M-00\" ~ \"iso-M_1\",\n                                   sampleID == \"iso-M-23\" ~ \"iso-M_2\",\n                                   sampleID == \"iso-M-40\" ~ \"iso-M_3\",\n                                   sampleID == \"soc-F-05\" ~ \"soc-F_1\",\n                                   sampleID == \"soc-F-24\" ~ \"soc-F_2\",\n                                   sampleID == \"soc-F-36\" ~ \"soc-F_3\",\n                                   sampleID == \"soc-M-01\" ~ \"soc-M_1\",\n                                   sampleID == \"soc-M-25\" ~ \"soc-M_2\",\n                                   sampleID == \"soc-M-41\" ~ \"soc-M_3\"\n                                  ))\n\n\noptions(repr.plot.width = 10, repr.plot.height = 5, repr.plot.res = 300)\nDimPlot(seu_obj, reduction = \"umap\", split.by = \"sample_name\",alpha=0.7,ncol=6)\n\n\n\n\n\n\n\n\n\nsaveRDS(seu_obj,file=\"/project/zhuzhuzhang/lyang/scaleBio_RNA_rat_brain/out_mRatBN/merged_seurat_obj_DF_removed_2.rds\")\n\n\nhead(seu_obj@meta.data)\n\n\nA data.frame: 6 × 14\n\n\n\norig.ident\nnCount_RNA\nnFeature_RNA\npercent.mt\nnCount_SCT\nnFeature_SCT\ngroup\nsex\nSCT_snn_res.0.7\nseurat_clusters\npANN_0.25_0.09_5707\nDF.classifications_0.25_0.09_5707\nsampleID\nsample_name\n\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;int&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;int&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;fct&gt;\n&lt;fct&gt;\n&lt;dbl&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n\n\n\n\niso-F-04_AAACCATAGACTATGCAATACCAGGCGCA\nRat\n2892\n1519\n0\n3229\n1519\niso\nF\n10\n10\n0.3220896\nSinglet\niso-F-04\niso-F_1\n\n\niso-F-04_AAACCATAGACTATGCAATTCGGATTCGG\nRat\n2971\n1489\n0\n3287\n1489\niso\nF\n8\n8\n0.2795970\nSinglet\niso-F-04\niso-F_1\n\n\niso-F-04_AAACCATAGGGTATGCTTGTCGGATTCGG\nRat\n1996\n1189\n0\n3028\n1208\niso\nF\n10\n10\n0.3189136\nSinglet\niso-F-04\niso-F_1\n\n\niso-F-04_AAACCATAGTCCTACCAGTCTAACTAGGT\nRat\n5871\n2496\n0\n4299\n2456\niso\nF\n14\n14\n0.2988720\nSinglet\niso-F-04\niso-F_1\n\n\niso-F-04_AAACCATAGTCCTACCAGTGTAGGATAAG\nRat\n2068\n1185\n0\n3104\n1190\niso\nF\n3\n3\n0.1328442\nSinglet\niso-F-04\niso-F_1\n\n\niso-F-04_AAACCATAGTCGCGGTTGGTTGATACGAT\nRat\n1922\n1121\n0\n3064\n1153\niso\nF\n10\n10\n0.3220896\nSinglet\niso-F-04\niso-F_1\n\n\n\n\n\n\noptions(repr.plot.width = 5, repr.plot.height = 3, repr.plot.res = 300)\nseu_obj@meta.data %&gt;%\n    ggplot(aes(x=sample_name))+\n    geom_bar(stat=\"count\")+\n    theme_minimal()+\n    ggtitle(\"Cell numbers in sample\")+\n    theme(axis.text.x = element_text(angle=30,vjust=1,hjust=1))+\n    labs(x=\"\")\n\n\n\n\n\n\n\n\n\noptions(repr.plot.width = 5, repr.plot.height = 3, repr.plot.res = 300)\nseu_obj@meta.data %&gt;%\n    ggplot(aes(x=sample_name,y=nFeature_RNA))+\n    geom_violin(width=1,position = position_dodge(0.9)) +\n    geom_boxplot(width=0.2, color=\"grey\", alpha=0.4,position = position_dodge(0.9))+\n    theme_minimal()+\n    ggtitle(\"gene counts in each cell\")+\n    theme(axis.text.x = element_text(angle=30,vjust=1,hjust=1))+\n    labs(x=\"\")\n\n\n\n\n\n\n\n\n\noptions(repr.plot.width = 10, repr.plot.height = 5, repr.plot.res = 300)\np1 &lt;- DimPlot(seu_obj, reduction = \"umap\", group.by = \"group\",alpha=0.6)\np2 &lt;- DimPlot(seu_obj, reduction = \"umap\", group.by = \"sex\",alpha=0.7)\np1+p2\n\n\n\n\n\n\n\n\n\nseu_obj@meta.data %&gt;%\n    ggplot(aes(x=seurat_clusters,y=nCount_RNA))+\n    geom_boxplot()+\n    theme_minimal()+\n    scale_x_discrete(name=\"\")"
  },
  {
    "objectID": "iso_vs_soc_DEG_visualization.html",
    "href": "iso_vs_soc_DEG_visualization.html",
    "title": "check expression on DEGs",
    "section": "",
    "text": "library(Seurat)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(patchwork)\nlibrary(stringr)\nlibrary(ggplot2)\n## https://drive.google.com/file/d/16Jq6w_KAWwI2rBN7SYBw-7bm5qwVoFyt/view?usp=drive_link\nseu_obj &lt;- readRDS(file=\"/project/zhuzhuzhang/lyang/scaleBio_RNA_rat_brain/out_mRatBN/merged_seurat_obj_celltype_annotated_2.rds\")\n\n## https://drive.google.com/file/d/1Q7HV0PAfjac-19xNM455wGNN6zvkOyx4/view?usp=drive_link\npseudo_seu &lt;- readRDS(file = \"./pseudo_Seu_obj_2.rds\")\n\n## https://drive.google.com/file/d/1XbDy0A_rLt-kTDQvtqyCCGJ__qxdym7e/view?usp=drive_link\npseudo_de &lt;- readRDS(file = \"./pseudo_DESeq2_DEG_2.rds\")\nIdents(seu_obj) &lt;- \"celltype\"\ngene_ls &lt;- c(\"Slc17a7\", ## Exc\n             \"Prex1\",\"Enpp2\",\"Rfx3\", ## L2/3 IT\n             \"Rorb\", \"Kcnh5\",\"Cadps2\", ## L4 IT\n             \"Ptgfran\",\"Il1rapl2\", ## L5 IT\n             \"Mgat\",\"Rspo2\",\"Kcnab1\", ## L6 IT\n             \"Vwc2l\",\"Nxph1\",## L5/6 NP\n             \"Foxp2\",\"Tle4\",\"Syt6\", ## L6 CT\n             \"Vat1l\",\"Etv1\",\"Tcerg1l\", ## L5 ET\n             \"Fgf13\",\"Lamp5\",\"Vip\", \"Npas3\",## CGE-Inh\n             \"Sst\", \"Grin3a\", ## Sst-Inh\n             \"Cemip\",\"Man1c1\", ## Pvalb-Inh\n             \"Slc1a3\",\"Atp1a2\", ## ASC\n            \"Mbp\",\"Mobp\",\"Plp1\",## ODC\n             \"Gfra1\",\"Shisa6\", ## OPC\n             \"Flt1\",\"Cyyr1\", ## Endo\n             \"Pbx3\",\"Rgs9\" ## STR\n             \n            )\ndata_df &lt;- cbind(sample_name=colnames(seu_obj@assays$SCT$data),\n      as.data.frame(t(as.matrix(seu_obj@assays$SCT$data[gene_ls[gene_ls %in% row.names(seu_obj@assays$SCT$data)],]))))\nanno &lt;- seu_obj@meta.data %&gt;%\n        mutate(sample_name=row.names(.)) %&gt;%\n        mutate(celltype_id=celltype) %&gt;%\n        mutate(celltype_label=celltype)\noptions(repr.plot.width = 10, repr.plot.height = 8, repr.plot.res = 300)\np &lt;- sample_bar_plot(data_df, \n                anno, \n                genes = gene_ls[gene_ls %in% row.names(seu_obj@assays$SCT$data)], \n                grouping = \"celltype\", \n                log_scale = FALSE,\n                font_size = 9,\n                label_type = \"angle\")\nprint(p)\ngroup_violin_plot(data_df, \n                  anno, \n                  genes = gene_ls[gene_ls %in% row.names(seu_obj@assays$SCT$data)], \n                  grouping = \"celltype\", \n                  log_scale = FALSE,\n                  font_size = 7,\n                  rotate_counts = TRUE)\nhead(pseudo_seu)\n\n\nA data.frame: 10 × 4\n\n\n\norig.ident\nsample_name\ncelltype\ncelltype.group\n\n\n\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n\n\n\n\niso-F-1_L2/3 IT\niso-F-1_L2/3 IT\niso-F-1\nL2/3 IT\nL2/3 IT_iso\n\n\niso-F-1_L4 IT\niso-F-1_L4 IT\niso-F-1\nL4 IT\nL4 IT_iso\n\n\niso-F-1_L5 IT\niso-F-1_L5 IT\niso-F-1\nL5 IT\nL5 IT_iso\n\n\niso-F-1_L6 IT\niso-F-1_L6 IT\niso-F-1\nL6 IT\nL6 IT_iso\n\n\niso-F-1_L5/6 NP\niso-F-1_L5/6 NP\niso-F-1\nL5/6 NP\nL5/6 NP_iso\n\n\niso-F-1_L6 CT\niso-F-1_L6 CT\niso-F-1\nL6 CT\nL6 CT_iso\n\n\niso-F-1_L5 ET\niso-F-1_L5 ET\niso-F-1\nL5 ET\nL5 ET_iso\n\n\niso-F-1_CGE-Inh\niso-F-1_CGE-Inh\niso-F-1\nCGE-Inh\nCGE-Inh_iso\n\n\niso-F-1_Sst-Inh\niso-F-1_Sst-Inh\niso-F-1\nSst-Inh\nSst-Inh_iso\n\n\niso-F-1_Pvalb-Inh\niso-F-1_Pvalb-Inh\niso-F-1\nPvalb-Inh\nPvalb-Inh_iso\npseudo_de &lt;- pseudo_de[-16]\nlibrary(tidyr)\nlibrary(ComplexHeatmap)\nlibrary(tibble)\nlibrary(circlize)\n\nLoading required package: grid\n\n========================================\nComplexHeatmap version 2.18.0\nBioconductor page: http://bioconductor.org/packages/ComplexHeatmap/\nGithub page: https://github.com/jokergoo/ComplexHeatmap\nDocumentation: http://jokergoo.github.io/ComplexHeatmap-reference\n\nIf you use it in published research, please cite either one:\n- Gu, Z. Complex Heatmap Visualization. iMeta 2022.\n- Gu, Z. Complex heatmaps reveal patterns and correlations in multidimensional \n    genomic data. Bioinformatics 2016.\n\n\nThe new InteractiveComplexHeatmap package can directly export static \ncomplex heatmaps into an interactive Shiny app with zero effort. Have a try!\n\nThis message can be suppressed by:\n  suppressPackageStartupMessages(library(ComplexHeatmap))\n========================================\n\n\n========================================\ncirclize version 0.4.16\nCRAN page: https://cran.r-project.org/package=circlize\nGithub page: https://github.com/jokergoo/circlize\nDocumentation: https://jokergoo.github.io/circlize_book/book/\n\nIf you use it in published research, please cite:\nGu, Z. circlize implements and enhances circular visualization\n  in R. Bioinformatics 2014.\n\nThis message can be suppressed by:\n  suppressPackageStartupMessages(library(circlize))\n========================================"
  },
  {
    "objectID": "iso_vs_soc_DEG_visualization.html#merge-the-deg-list",
    "href": "iso_vs_soc_DEG_visualization.html#merge-the-deg-list",
    "title": "check expression on DEGs",
    "section": "merge the DEG list",
    "text": "merge the DEG list\n\nDEG_ls&lt;-\nlapply(seq_len(length(names(pseudo_de))), function(x) {\n    if (sum(pseudo_de[[x]]$p_val_adj &lt; 0.05 & abs(pseudo_de[[x]]$avg_log2FC) &gt; 0.3,na.rm = TRUE) &gt; 0) {\n        pseudo_de[[x]] %&gt;%\n            filter(p_val_adj &lt; 0.05, abs(avg_log2FC) &gt; 0.3)\n    }\n})\nnames(DEG_ls) &lt;- names(pseudo_de)\nDEG_ls &lt;- DEG_ls[!sapply(DEG_ls,is.null)]\n\n\nDEG_merged&lt;- do.call(rbind,Map(cbind, DEG_ls, new_clumn = names(DEG_ls))) %&gt;%\n  mutate(gene = str_split(row.names(.), \"\\\\.\", simplify = TRUE)[, 2]) %&gt;%\n    filter(gene != \"\")\n\n\nDEG_merged[1:3,]\n\n\nA data.frame: 3 × 7\n\n\n\np_val\navg_log2FC\npct.1\npct.2\np_val_adj\nnew_clumn\ngene\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n\n\n\n\nL2/3 IT.LOC102548918\n2.089267e-15\n-1.3097989\n1\n1\n5.556822e-11\nL2/3 IT\nLOC102548918\n\n\nL2/3 IT.Iqgap2\n1.322525e-12\n-0.7579870\n1\n1\n3.517520e-08\nL2/3 IT\nIqgap2\n\n\nL2/3 IT.Pdzd2\n2.604076e-12\n-0.8742842\n1\n1\n6.926060e-08\nL2/3 IT\nPdzd2\n\n\n\n\n\n\nDEG_up_ls&lt;-\nlapply(seq_len(length(names(pseudo_de))), function(x) {\n    if (sum(pseudo_de[[x]]$p_val_adj &lt; 0.05 & pseudo_de[[x]]$avg_log2FC &gt; 0.3,na.rm = TRUE) &gt; 0) {\n        pseudo_de[[x]] %&gt;%\n            filter(p_val_adj &lt; 0.05, avg_log2FC &gt; 0.3)\n    }\n})\nnames(DEG_up_ls) &lt;- names(pseudo_de)\nDEG_up_ls &lt;- DEG_up_ls[!sapply(DEG_up_ls,is.null)]\n\n\nDEG_down_ls&lt;-\nlapply(seq_len(length(names(pseudo_de))), function(x) {\n    if (sum(pseudo_de[[x]]$p_val_adj &lt; 0.05 & pseudo_de[[x]]$avg_log2FC &lt; (-0.3),na.rm = TRUE) &gt; 0) {\n        pseudo_de[[x]] %&gt;%\n            filter(p_val_adj &lt; 0.05, avg_log2FC &lt; (-0.3))\n    }\n})\nnames(DEG_down_ls) &lt;- names(pseudo_de)\nDEG_down_ls &lt;- DEG_down_ls[!sapply(DEG_down_ls,is.null)]\n\n\nnames(DEG_down_ls)\n\n\n'L2/3 IT''L4 IT''L5 IT''L6 IT''L6 CT''L5 ET''CGE-Inh''OPC'"
  },
  {
    "objectID": "iso_vs_soc_DEG_visualization.html#save-the-fc-data-for-all-celltypes-for-all-degs",
    "href": "iso_vs_soc_DEG_visualization.html#save-the-fc-data-for-all-celltypes-for-all-degs",
    "title": "check expression on DEGs",
    "section": "save the FC data for all celltypes for all DEGs",
    "text": "save the FC data for all celltypes for all DEGs\n\n## gather fold change information together\nDEG_ls&lt;- \nlapply(seq_len(length(names(pseudo_de))), function(x) {\n        pseudo_de[[x]] %&gt;%\n            filter(row.names(.) %in% unique(isoVSsoc_DEG_ls$gene))\n    })\nnames(DEG_ls) &lt;- names(pseudo_de)\nall_DEG_gene &lt;- do.call(rbind,Map(cbind, DEG_ls, new_clumn = names(DEG_ls))) %&gt;%\n  mutate(gene = str_split(row.names(.), \"\\\\.\", simplify = TRUE)[, 2]) %&gt;%\n    filter(gene != \"\")\n\nall_DEG_gene %&gt;%\n    select(new_clumn,avg_log2FC,gene) %&gt;%\n    tidyr::pivot_wider(names_from = new_clumn, values_from = avg_log2FC) %&gt;%\n    tibble::column_to_rownames(var=\"gene\") %&gt;%\n    write.table(file=\"./isoVSsoc_DEG_FC_celltype_matrix.tsv\",quote=F,sep=\"\\t\",row.names=T)\n\nall_DEG_gene %&gt;%\n    select(new_clumn,p_val_adj,gene) %&gt;%\n    tidyr::pivot_wider(names_from = new_clumn, values_from = p_val_adj) %&gt;%\n    tibble::column_to_rownames(var=\"gene\") %&gt;%\n    write.table(file=\"./isoVSsoc_DEG_adjP_celltype_matrix.tsv\",quote=F,sep=\"\\t\",row.names=T)\n\n\nmake heatmap for all FCs in all celltypes\n\nisoVSsoc_DEG_FC &lt;- read.table(\"./isoVSsoc_DEG_FC_celltype_matrix.tsv\", header=T,sep=\"\\t\",row.names=1)\nisoVSsoc_DEG_P &lt;- read.table(\"./isoVSsoc_DEG_adjP_celltype_matrix.tsv\", header=T,sep=\"\\t\",row.names=1)\n\n\nrm.neg&lt;-plyr::colwise(function(x){\n  return(ifelse(x &lt; 0.0001,\"****\", \n                ifelse(x&lt;0.001,\"***\",\n                      ifelse(x&lt;0.01,\"**\",\n                            ifelse(x&lt;0.05,\"*\",\"\")))))})\np_sign_df &lt;- rm.neg(isoVSsoc_DEG_P)\n\nrow.names(p_sign_df) &lt;- row.names(isoVSsoc_DEG_P)\ncolnames(p_sign_df) &lt;- c(\"L2/3 IT\", \"L4 IT\", \"L5 IT\", \"L6 IT\", \"L5/6 NP\", \"L6 CT\", \"L5 ET\", \"CGE-Inh\", \"Sst-Inh\", \"Pvalb-Inh\", \"ASC\", \"ODC\", \"OPC\", \"Endo\")\n\ncolnames(isoVSsoc_DEG_FC) &lt;- c(\"L2/3 IT\", \"L4 IT\", \"L5 IT\", \"L6 IT\", \"L5/6 NP\", \"L6 CT\", \"L5 ET\", \"CGE-Inh\", \"Sst-Inh\", \"Pvalb-Inh\", \"ASC\", \"ODC\", \"OPC\", \"Endo\")\np_sign_df[is.na(p_sign_df)] &lt;- \"\"\np_sign_df[abs(isoVSsoc_DEG_FC)&lt;0.3] &lt;- \"\"\n\n\nsummary(isoVSsoc_DEG_FC)\n\n    L2/3 IT             L4 IT              L5 IT             L6 IT          \n Min.   :-1.30980   Min.   :-1.09734   Min.   :-0.8480   Min.   :-1.111527  \n 1st Qu.:-0.63743   1st Qu.:-0.38195   1st Qu.:-0.2615   1st Qu.:-0.569098  \n Median :-0.51781   Median :-0.17385   Median :-0.1304   Median :-0.424604  \n Mean   :-0.34255   Mean   :-0.08588   Mean   :-0.0397   Mean   :-0.336213  \n 3rd Qu.: 0.07853   3rd Qu.: 0.21437   3rd Qu.: 0.2450   3rd Qu.:-0.007744  \n Max.   : 0.79294   Max.   : 0.86125   Max.   : 0.8612   Max.   : 0.451747  \n    L5/6 NP             L6 CT             L5 ET             CGE-Inh       \n Min.   :-1.00000   Min.   :-1.1010   Min.   :-0.82254   Min.   :-0.7605  \n 1st Qu.:-0.43982   1st Qu.:-0.6284   1st Qu.:-0.49044   1st Qu.:-0.4358  \n Median :-0.25787   Median :-0.4191   Median :-0.25448   Median :-0.2937  \n Mean   :-0.24905   Mean   :-0.3686   Mean   :-0.18328   Mean   :-0.2709  \n 3rd Qu.:-0.08553   3rd Qu.:-0.0889   3rd Qu.: 0.08577   3rd Qu.:-0.1583  \n Max.   : 0.71543   Max.   : 0.4759   Max.   : 0.77626   Max.   : 1.0000  \n    Sst-Inh          Pvalb-Inh             ASC               ODC          \n Min.   :-1.1043   Min.   :-0.65208   Min.   :-1.3445   Min.   :-1.25096  \n 1st Qu.:-0.4386   1st Qu.:-0.36391   1st Qu.:-0.7263   1st Qu.:-0.71387  \n Median :-0.3561   Median :-0.29677   Median :-0.5488   Median :-0.46949  \n Mean   :-0.3346   Mean   :-0.28294   Mean   :-0.4687   Mean   :-0.40103  \n 3rd Qu.:-0.2346   3rd Qu.:-0.21554   3rd Qu.:-0.1787   3rd Qu.:-0.09184  \n Max.   : 0.4150   Max.   : 0.05965   Max.   : 1.1043   Max.   : 0.62409  \n      OPC               Endo         \n Min.   :-1.6229   Min.   :-2.00000  \n 1st Qu.:-0.9650   1st Qu.:-0.52195  \n Median :-0.7452   Median :-0.28063  \n Mean   :-0.7249   Mean   :-0.31877  \n 3rd Qu.:-0.4900   3rd Qu.: 0.01543  \n Max.   : 0.3806   Max.   : 1.28011  \n\n\n\ncol_fun = colorRamp2(c(-1, 0, 1), c(\"#0077b6\", \"white\", \"#e63946\"))\np = Heatmap(isoVSsoc_DEG_FC, name = \"iso/soc\\navg_logFC\", col = col_fun,\n        cluster_columns = F,\n        show_row_dend = F,\n        heatmap_legend_param = list(\n            legend_direction = \"horizontal\", \n        legend_width = unit(6, \"cm\")),\n        row_names_gp = grid::gpar(fontsize = 6),\n        column_names_gp = grid::gpar(fontsize = 6),\n        cell_fun = function(j, i, x, y, width, height, fill) {\n            gb = textGrob(\"*\")\n            gb_w = convertWidth(grobWidth(gb), \"mm\")\n            gb_h = convertHeight(grobHeight(gb), \"mm\")\n            grid.text(sprintf(\"%s\", p_sign_df[i, j]), x, y - gb_h*0.5 + gb_w*0.4, gp = gpar(fontsize = 10))\n})\n\nlgd1 = Legend(labels=c(\"&lt;0.0001\",\"&lt;0.001\",\"&lt;0.01\",\"&lt;0.05\"),pch = c(\"**** \",\"*** \",\"** \",\"* \"), title = \"adj.p\", type = \"points\", \n    background = \"white\",direction = \"horizontal\")\nlgd2 = Legend(labels=\"gene not detected\",legend_gp = gpar(fill = \"grey\"), title = \"NA\")\n\npdf(\"isoVSsoc_DEG_logFC_heatmap.pdf\",width=5,height=7)\ndraw(p,annotation_legend_list = list(lgd1),heatmap_legend_side=\"bottom\", annotation_legend_side=\"right\",\n           legend_grouping = \"original\")\ndev.off()\n\nWarning message:\n“The input is a data frame-like object, convert it to a matrix.”\n\n\npng: 2\n\n\n\nisoVSsoc_DEG_ls$P_label&lt;- \n    symnum(isoVSsoc_DEG_ls$p_val_adj, cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05,1),\n       symbols = c(\"****\", \"***\", \"**\", \"*\", \"ns\"),\n       abbr.colnames = FALSE, na = \"\")\n\n\nIdents(seu_obj) &lt;- \"celltype\"\n\n\nmake_vlnplot &lt;- \nfunction(genes=NULL,celltype=NULL,label_df=NULL){\n    VlnPlot(seu_obj, \n        features = genes,\n        idents=celltype,\n        split.by = \"group\",\n        pt.size = 0.0,\n        #split.plot = T,\n        log=FALSE)&\n        scale_fill_manual(values=c(\"iso\"=\"#e31a1c\",\"soc\"=\"#ffda79\")) &\n        annotate(\"text\",x=label_df$new_clumn,y=Inf,label=label_df$P_label,vjust=1,hjust=0.5) &\n        #stat_summary(fun = median, fun.min = median, fun.max = median,\n        #         geom = \"crossbar\", \n        #         width = 0.6,\n        #         position = position_dodge(width = .70)) &\n                xlab(\"\") &\n                ylab(\"Gene Expression\") &\n          stat_summary(fun = \"mean\",\n               geom = \"point\",\n               color = \"black\",\n               position = position_dodge(width = .90)) &\n    labs(caption = paste(\"adj.p: \",\"**** &lt;0.0001\",\"*** &lt;0.001\",\"** &lt;0.01\",\"* &lt;0.05\")) &\n    guides(fill = guide_legend(override.aes = list(linetype = 0,size = 0)),\n               color = guide_legend(override.aes = list(linetype = 0,size=0)))\n}\n\n\ngene_for_plot &lt;- read.csv(\"./genes_for_vlnplot.csv\",header=F,sep=\"\\t\")\n\n\ngene_for_plot\n\n\nA data.frame: 15 × 2\n\n\nV1\nV2\n\n\n&lt;chr&gt;\n&lt;chr&gt;\n\n\n\n\nLOC102548918\nL2/3 IT,L5 IT,L6 CT,L6 IT,OPC\n\n\nSlit2\nL2/3 IT,L4 IT,L5 IT\n\n\nAff3\nL2/3 IT,L5 ET,L6 CT,L6 IT\n\n\nPde10a\nL2/3 IT,L5 ET,L6 CT,L6 IT\n\n\nDscaml1\nL2/3 IT,L6 IT,OPC\n\n\nSamd5\nL5 IT,L6 CT,L6 IT\n\n\nApba2\nL2/3 IT,L4 IT\n\n\nGrm3\nL2/3 IT,L5 ET\n\n\nKlhl1\nL2/3 IT,L5 ET\n\n\nPdzd2\nL2/3 IT,L5 ET\n\n\nPpm1l\nL2/3 IT,L5 ET\n\n\nKcnd3\nL2/3 IT,L6 CT\n\n\nZmiz1\nL2/3 IT,L6 IT\n\n\nFmn1\nL4 IT,L6 IT\n\n\nMyt1l\nL5 ET,L6 CT\n\n\n\n\n\n\nlabel_df &lt;- data.frame(celltype=c(\"L2/3 IT\",\"L5 IT\"),label=c(\"*\",\"ns\"))\n\n\noptions(repr.plot.width = 8, repr.plot.height = 4, repr.plot.res = 300)\nmake_vlnplot(genes=\"Pde10a\",\n                 celltype=names(pseudo_de),\n            label_df=subset(isoVSsoc_DEG_ls,gene==\"Pde10a\"))\n\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\n\n\n\n\n\n\n\n\n\n\npdf(file = \"./Vlnplot_for_overlapping_DEGs.pdf\",width=4,height=4,onefile=TRUE)\nfor(i in seq_len(nrow(gene_for_plot))){\n    p &lt;- make_vlnplot(genes=gene_for_plot[i,\"V1\"],\n                 celltype=unlist(stringr::str_split(gene_for_plot[i,\"V2\"],\",\")))\n    print(p)\n}\ndev.off()\n\n\nseu_obj@meta.data$group &lt;- factor(seu_obj@meta.data$group,levels=c(\"soc\",\"iso\"))\n\n\n## make plot for those genes in all celltypes\npdf(file = \"./Vlnplot_for_isoVSsoc_DEGs_in_all_celltypes (log=F).pdf\",width=8,height=4,onefile=TRUE)\nfor(i in seq_len(nrow(gene_for_plot))){\n    p &lt;- make_vlnplot(genes=gene_for_plot[i,\"V1\"],\n                 celltype=names(pseudo_de),\n            label_df=subset(isoVSsoc_DEG_ls,gene==gene_for_plot[i,\"V1\"]))\n    print(p)\n}\ndev.off()\n\n\ndev.off()\n\npdf: 3"
  },
  {
    "objectID": "iso_vs_soc_DEG_visualization.html#make-umaps-for-degs",
    "href": "iso_vs_soc_DEG_visualization.html#make-umaps-for-degs",
    "title": "check expression on DEGs",
    "section": "make umaps for DEGs",
    "text": "make umaps for DEGs\n\nmy_cols = c(\"L2/3 IT\" = \"#D9F0A3\",\n            \"L4 IT\" = \"#C77963\",\n            \"L5 IT\" = \"#FDDCFF\",\n            \"L6 IT\" = \"#B832E5\",\n            \"L5/6 NP\" = \"#AD6C49\",\n            \"L5 ET\" = \"#B28D9A\",\n            \"L6 CT\" = \"#0094C2\",\n            \"CGE-Inh\" = \"#CEFF00\",\n            \"Sst-Inh\" = \"#C8C8C8\",\n            \"Pvalb-Inh\" = \"#0640FF\",\n            \"ASC\" = \"#00B7FF\",\n            \"ODC\" = \"#0DFF00\",\n            \"OPC\" = \"#81AA70\",\n            \"STR\" = \"#ADBF00\",\n            \"Endo\" = \"#9E7153\")\n\n\noptions(repr.plot.width = 5, repr.plot.height = 4, repr.plot.res = 300)\nDimPlot(seu_obj, reduction = \"umap\", group.by = \"celltype\",alpha=0.7,cols = my_cols)\n\n\n\n\n\n\n\n\n\npdf(file = \"./umap_for_overlapping_DEGs.pdf\",width=10,height=5,onefile=TRUE)\nfor(i in seq_len(nrow(gene_for_plot))){\n    p &lt;- FeaturePlot(seu_obj, features = gene_for_plot[i,\"V1\"],split.by=\"group\") + \n            theme(legend.position = c(-0.35,0.2))+\n            theme(legend.text=element_text(size=10, color=\"black\"))\n    print(p)\n}\ndev.off()\n\npng: 2"
  },
  {
    "objectID": "iso_vs_soc_DEG_visualization.html#make-heatmap-for-degs",
    "href": "iso_vs_soc_DEG_visualization.html#make-heatmap-for-degs",
    "title": "check expression on DEGs",
    "section": "make heatmap for DEGs",
    "text": "make heatmap for DEGs\n\nall_up_gene &lt;- do.call(rbind,Map(cbind, DEG_up_ls, new_clumn = names(DEG_up_ls))) %&gt;%\n  mutate(gene = str_split(row.names(.), \"\\\\.\", simplify = TRUE)[, 2]) %&gt;%\n    filter(gene != \"\") %&gt;%\n    pull(gene) %&gt;%\n    unique()\n\n\noptions(repr.plot.width = 7, repr.plot.height = 4, repr.plot.res = 300)\ncol_anno = data.frame(celltype=pseudo_seu@meta.data$celltype,\n                     sex=str_split(pseudo_seu@meta.data$sample_name,\"-\",simplify = T)[,2],\n                      group=str_split(pseudo_seu@meta.data$sample_name,\"-\",simplify = T)[,1],\n                     row.names=row.names(pseudo_seu@meta.data))\n\ncolumn_ha = HeatmapAnnotation(celltype=col_anno$celltype,\n                              sex=col_anno$sex,group=col_anno$group,\n                             col = list(sex = c(\"F\"=\"#81b29a\",\"M\"=\"#e07a5f\"),\n                                       group = c(\"iso\"=\"#8da9c4\",\"soc\"=\"#f2cc8f\"),\n                                       celltype = c(\"L2/3 IT\" = \"#D9F0A3\",\"L4 IT\" = \"#C77963\",\"L5 IT\" = \"#FDDCFF\",\n                                                   \"L6 IT\" = \"#B832E5\",\"L5/6 NP\" = \"#AD6C49\",\"L5 ET\" = \"#B28D9A\",\n                                                   \"L6 CT\" = \"#0094C2\",\"CGE-Inh\" = \"#CEFF00\",\"Sst-Inh\" = \"#C8C8C8\",\n                                                   \"Pvalb-Inh\" = \"#0640FF\",\"ASC\" = \"#00B7FF\",\"ODC\" = \"#0DFF00\",\n                                                    \"OPC\" = \"#81AA70\",\"Endo\" = \"#9E7153\",\"STR\" = \"#ADBF00\")))\nlgd1 = Legend(title = \"group\", at = c(\"iso\",\"soc\"), legend_gp = gpar(fill = 1:2))\nlgd2 = Legend(title = \"sex\", at = c(\"F\",\"M\"), legend_gp = gpar(fill = 3:4))\n\np &lt;- Heatmap(t(scale(t(pseudo_seu@assays$RNA$data[all_up_gene,]))),\n        top_annotation = column_ha,\n        cluster_rows = FALSE,\n        cluster_columns = FALSE,\n        row_names_gp = gpar(fontsize = 6),\n        column_names_gp = gpar(fontsize = 6),\n        column_split = factor(col_anno$celltype,levels=unique(col_anno$celltype)),\n        column_title_gp = gpar( fontsize = 5),\n        name=\"expession\",\n        show_column_names = FALSE        \n       )\n\n\np\n\n\n\n\n\n\n\n\n\nall_down_gene &lt;- do.call(rbind,Map(cbind, DEG_down_ls, new_clumn = names(DEG_down_ls))) %&gt;%\n  mutate(gene = str_split(row.names(.), \"\\\\.\", simplify = TRUE)[, 2]) %&gt;%\n    filter(gene != \"\") %&gt;%\n    pull(gene) %&gt;%\n    unique()\noptions(repr.plot.width = 7, repr.plot.height = 4, repr.plot.res = 300)\ncol_anno = data.frame(celltype=pseudo_seu@meta.data$celltype,\n                     sex=str_split(pseudo_seu@meta.data$sample_name,\"-\",simplify = T)[,2],\n                      group=str_split(pseudo_seu@meta.data$sample_name,\"-\",simplify = T)[,1],\n                     row.names=row.names(pseudo_seu@meta.data))\n\ncolumn_ha = HeatmapAnnotation(celltype=col_anno$celltype,\n                              sex=col_anno$sex,group=col_anno$group,\n                             col = list(sex = c(\"F\"=\"#81b29a\",\"M\"=\"#e07a5f\"),\n                                       group = c(\"iso\"=\"#8da9c4\",\"soc\"=\"#f2cc8f\"),\n                                       celltype = c(\"L2/3 IT\" = \"#D9F0A3\",\"L4 IT\" = \"#C77963\",\"L5 IT\" = \"#FDDCFF\",\n                                                   \"L6 IT\" = \"#B832E5\",\"L5/6 NP\" = \"#AD6C49\",\"L5 ET\" = \"#B28D9A\",\n                                                   \"L6 CT\" = \"#0094C2\",\"CGE-Inh\" = \"#CEFF00\",\"Sst-Inh\" = \"#C8C8C8\",\n                                                   \"Pvalb-Inh\" = \"#0640FF\",\"ASC\" = \"#00B7FF\",\"Oligo\" = \"#21F4CC\",\n                                                   \"ODC\" = \"#0DFF00\",\"OPC\" = \"#81AA70\",\"STR\" = \"#ADBF00\",\"Endo\" = \"#9E7153\")))\nlgd1 = Legend(title = \"group\", at = c(\"iso\",\"soc\"), legend_gp = gpar(fill = 1:2))\nlgd2 = Legend(title = \"sex\", at = c(\"F\",\"M\"), legend_gp = gpar(fill = 3:4))\n\np&lt;- Heatmap(t(scale(t(pseudo_seu@assays$RNA$data[all_down_gene,]))),\n        top_annotation = column_ha,\n        cluster_rows = FALSE,\n        cluster_columns = FALSE,\n        row_names_gp = gpar(fontsize = 6),\n        column_names_gp = gpar(fontsize = 6),\n        column_split = factor(col_anno$celltype,levels=unique(col_anno$celltype)),\n        column_title_gp = gpar( fontsize = 5),\n        name=\"expession\",\n        show_column_names = FALSE        \n       )\n\n\np\n\n\n\n\n\n\n\n\n\noptions(repr.plot.width = 5, repr.plot.height = 4, repr.plot.res = 300)\nseu_obj@meta.data %&gt;%\n    #count(celltype) %&gt;%\n    filter(celltype!=\"NA\") %&gt;%\n    ggplot(aes(x=celltype))+\n    geom_bar(fill=\"darkgrey\")+\n    geom_text(stat='count', aes(label=..count..), vjust=-0.2,size=2)+\n    #geom_text(aes(label = n), vjust = 0.5,size=2)+\n    facet_grid(group~.)+\n    labs(x=\"\",y=\"# of cells\")+\n    theme_minimal()+\n    theme(axis.text.x=element_text(angle=90,hjust=1),\n         plot.margin = unit(c(0,0,0,0), \"cm\"))"
  },
  {
    "objectID": "iso_vs_soc_DEG_visualization.html#go-analysis-for-degs",
    "href": "iso_vs_soc_DEG_visualization.html#go-analysis-for-degs",
    "title": "check expression on DEGs",
    "section": "GO analysis for DEGs",
    "text": "GO analysis for DEGs\n\nlibrary(stringr)\nlibrary(viridis)\nlibrary(org.Rn.eg.db)\nlibrary(clusterProfiler)\nlibrary(openxlsx)\n\n\ndir.create(\"./isoVSsoc_DEG_GO_2\")\n\n\nDEG_ls &lt;- lapply(pseudo_de, function(x){ x %&gt;% filter(p_val_adj&lt;0.05,abs(avg_log2FC) &gt;0.3) %&gt;% row.names()})\nnames(DEG_ls) = str_replace_all(string =names(DEG_ls) ,pattern = \"\\\\/\" ,replacement = \"\")\nGO_ls &lt;- list()\nfor(i in seq_len(length(DEG_ls))){\n    if(length(DEG_ls[[i]])&gt;5){\n           go_res &lt;- enrichGO(DEG_ls[[i]],OrgDb=org.Rn.eg.db,keyType=\"SYMBOL\",ont=\"BP\",pvalueCutoff  = 0.05, qvalueCutoff  = 1)\n          if(!is.null(go_res@result)){\n              GO_ls[names(DEG_ls)[i]] &lt;- go_res\n          }\n           }\n}\ncp_GO_ls &lt;- GO_ls\n\nwrite.xlsx(lapply(cp_GO_ls,function(df){df@result}),file=\"./isoVSsoc_DEG_GO_2/isoVSsoc_DEG_FC0.3_GO.xlsx\",asTable=T)\n\n\npdf(\"/project/zhuzhuzhang/lyang/scaleBio_RNA_rat_brain/out_mRatBN/isoVSsoc_DEG_GO_2/isoVSsoc_DEG_FC0.3_GO_dotplot.pdf\",onefile=TRUE)\nlapply(seq_along(GO_ls),\n       function(i){\n           if(!is.null(GO_ls[[i]])){\n           if(dim(GO_ls[[i]]@result)[1]&gt;0){\n               if(sum(GO_ls[[i]]@result$p.adjust&lt;0.05)&gt;0){\n                   GO_ls[[i]]@result %&gt;%\n                   filter(p.adjust&lt;0.05) %&gt;%\n                       mutate(ratio=as.numeric(str_split(GeneRatio,\"/\",simplify=T)[,1])/as.numeric(str_split(GeneRatio,\"/\",simplify=T)[,2])) %&gt;%\n                       slice_head(n=15) %&gt;%\n                        arrange(ratio) %&gt;%\n                        mutate(Description=factor(Description,levels=Description)) %&gt;%\n                       ggplot(aes(x=ratio,y=Description))+\n                       geom_point(aes(color=p.adjust,size=ratio))+\n                       labs(title=paste0(names(GO_ls)[i],\" \",\"iso vs soc \",\"(\",length(DEG_ls[[i]]) ,\")\"))+\n                       scale_y_discrete(labels = function(x) str_wrap(x, width = 50))+\n                        scale_color_viridis(option = \"D\")\n                   }\n               \n           }\n            }\n           }\n)\ndev.off()"
  }
]